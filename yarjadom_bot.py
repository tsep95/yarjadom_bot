import os
import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import random

# –£—Å—Ç–∞–Ω–æ–≤–∏ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å (–¥–ª—è —Ç–µ—Å—Ç–∞)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞
openai.api_key = OPENAI_API_KEY

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —ç—Ç–∞–ø–æ–≤
user_data = {}

# –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
SYSTEM_PROMPT = """
–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, –∂–∏–≤–æ–π –∏ —á—É—Ç–∫–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –¥—Ä—É–≥. –¢–≤–æ—è —Ü–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—Ç—å —É—é—Ç–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏, –∏ –ø–æ–º–æ—á—å –µ–º—É —à–∞–≥ –∑–∞ —à–∞–≥–æ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —ç–º–æ—Ü–∏—è—Ö. –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏: —Å—Ç—Ä–∞—Ö–æ–º, –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ–º, –≥–Ω–µ–≤–æ–º, –ø–µ—á–∞–ª—å—é, —Å—Ç—Ä–µ—Å—Å–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é –∏ –Ω–µ–º–Ω–æ–≥–æ –∂–∏—Ç–µ–π—Å–∫–æ–π –º—É–¥—Ä–æ—Å—Ç–∏.

‚ùó–ü—Ä–∏–Ω—Ü–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:
‚Äî –ù–µ –≥–∞–¥–∞–π, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –∞ –º—è–≥–∫–æ —Å–ø—Ä–∞—à–∏–≤–∞–π, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —ç–º–æ—Ü–∏–∏ –∏ –∏—Ö –ø—Ä–∏—á–∏–Ω—É.
‚Äî –ó–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑ (–Ω–∞ ¬´–¥–∞/–Ω–µ—Ç¬ª), —á—Ç–æ–±—ã —Ä–∞–∑–≥–æ–≤–æ—Ä —à—ë–ª –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ.
‚Äî –ë—É–¥—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–º: –æ—Ç—Ä–∞–∂–∞–π —á—É–≤—Å—Ç–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞ –∂–∏–≤—ã–º —è–∑—ã–∫–æ–º, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤.
‚Äî –ì–æ–≤–æ—Ä–∏ –∫–∞–∫ –¥—Ä—É–≥: "—è —Ä—è–¥–æ–º", "–±—ã–≤–∞–µ—Ç –∂–µ —Ç–∞–∫", "–≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è", "–¥–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è".
‚Äî –ö–æ–≥–¥–∞ –ø—Ä–∏—á–∏–Ω–∞ –ø—Ä–æ—è—Å–Ω—è–µ—Ç—Å—è, –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—Å–¥–µ–ª–∞–π –ø–∞—É–∑—É", "–ø–æ–±–æ–ª—Ç–∞–π —Å –∫–µ–º-—Ç–æ").
‚Äî –û—Ç–≤–µ—Ç—ã –∫–æ—Ä–æ—Ç–∫–∏–µ, —Ç—ë–ø–ª—ã–µ, —Å 1 —Å–º–∞–π–ª–∏–∫–æ–º (üòä, ü§ó, üíõ, üåø, üíå, üòå, üå∏, ‚ú®, ‚òÄÔ∏è, üåü).

üß† –≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã:
1. –ù–∞—á–∞–ª–æ ‚Äî —É–∑–Ω–∞–π, –∫–∞–∫ –¥–µ–ª–∞ —É —á–µ–ª–æ–≤–µ–∫–∞.
2. –≠–º–æ—Ü–∏–∏ ‚Äî —É—Ç–æ—á–Ω–∏, —á—Ç–æ –æ–Ω —á—É–≤—Å—Ç–≤—É–µ—Ç.
3. –ü—Ä–∏—á–∏–Ω–∞ ‚Äî —Ä–∞–∑–±–µ—Ä–∏—Å—å, –∏–∑-–∑–∞ —á–µ–≥–æ —ç—Ç–æ.
4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –∞ –ø–æ—Ç–æ–º –Ω–∞–º–µ–∫–Ω–∏ –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à—É—é –ø–æ–º–æ—â—å.

üîî –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–¥–ø–∏—Å–∫–∞:
‚Äî –ù–∞ —ç—Ç–∞–ø–µ 4, –∫–æ–≥–¥–∞ –ø—Ä–∏—á–∏–Ω–∞ —è—Å–Ω–∞, –¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–°–¥–µ–ª–∞–π –ø–µ—Ä–µ—Ä—ã–≤—á–∏–∫ üòä").
‚Äî –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤—å: "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–∂–µ–º –ø–æ–±–æ–ª—Ç–∞—Ç—å –æ–± —ç—Ç–æ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ ‚Äî —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥, –¥—Ä—É–≥–æ–π –±–æ—Ç, –≥–¥–µ –ø—Ä–æ—Ñ–∏ –ø–æ–º–æ–≥—É—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –ø–æ–ª—É—á—à–µ. –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üòå"
"""

# –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —á—É–≤—Å—Ç–≤–∞
EMOTION_RESPONSES = {
    "–≥—Ä—É—Å—Ç—å": [
        "–û—Ö, –≥—Ä—É—Å—Ç—å ‚Äî —ç—Ç–æ –Ω–µ–ª–µ–≥–∫–æ, –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è.",
        "–ë—ã–≤–∞–µ—Ç –∂–µ —Ç–∞–∫, —á—Ç–æ –≤—Å—ë –Ω–∞–≤–∞–ª–∏–≤–∞–µ—Ç—Å—è –∏ –≥—Ä—É—Å—Ç–Ω–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è.",
        "–ì—Ä—É—Å—Ç—å ‚Äî —ç—Ç–æ –∫–∞–∫ —Ç—É—á–∫–∞, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—ë —Ä–∞–∑–æ–≥–Ω–∞—Ç—å?",
        "–ú–Ω–µ –∂–∞–ª—å, —á—Ç–æ —Ç–µ–±–µ –≥—Ä—É—Å—Ç–Ω–æ, —è —Ä—è–¥–æ–º.",
        "–ò–Ω–æ–≥–¥–∞ –≥—Ä—É—Å—Ç—å –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç, –∏ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ."
    ],
    "—Å—Ç—Ä–µ—Å—Å": [
        "–û—Ö, —Å—Ç—Ä–µ—Å—Å ‚Äî —ç—Ç–æ –∫–∞–∫ —Ç—è–∂—ë–ª—ã–π —Ä—é–∫–∑–∞–∫, –¥–∞?",
        "–ü–æ–Ω–∏–º–∞—é, –∫–æ–≥–¥–∞ –≤—Å—ë –¥–∞–≤–∏—Ç, —Å–∏–ª –º–∞–ª–æ –æ—Å—Ç–∞—ë—Ç—Å—è.",
        "–°—Ç—Ä–µ—Å—Å ‚Äî —à—Ç—É–∫–∞ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è, –¥–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è?",
        "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ –Ω–∞–≤–∞–ª–∏–ª–æ—Å—å, –ø–æ–Ω–∏–º–∞—é.",
        "–ë—ã–≤–∞–µ—Ç, —á—Ç–æ –Ω–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤—ã–º–∞—Ç—ã–≤–∞–µ—Ç."
    ],
    "—É—Å—Ç–∞–ª–æ—Å—Ç—å": [
        "–£—Å—Ç–∞–ª–æ—Å—Ç—å ‚Äî —ç—Ç–æ –∫–∞–∫ –±–∞—Ç–∞—Ä–µ–π–∫–∞ –Ω–∞ –Ω—É–ª–µ, –¥–∞?",
        "–ß—É–≤—Å—Ç–≤—É—é, –∫–∞–∫ —Ç–µ–±–µ –Ω–µ–ø—Ä–æ—Å—Ç–æ, —è —Ä—è–¥–æ–º.",
        "–û—Ö, —É—Å—Ç–∞—Ç—å ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ –≤—Å—ë –∏–∑ —Ä—É–∫ –≤–∞–ª–∏—Ç—Å—è.",
        "–ü–æ–Ω–∏–º–∞—é, –∫–∞–∫ –≤—ã–º–æ—Ç–∞–ª–∞ —Ç–µ–±—è —ç—Ç–∞ –±–µ–≥–æ—Ç–Ω—è.",
        "–ò–Ω–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—Ç—Å—è –≤—ã–¥–æ—Ö–Ω—É—Ç—å, –ø—Ä–∞–≤–¥–∞?"
    ],
    "–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ": [
        "–û—Ö, –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ ‚Äî —ç—Ç–æ –∫–∞–∫ –±—É–¥—Ç–æ –ø—É—Å—Ç–æ –≤–Ω—É—Ç—Ä–∏.",
        "–ü–æ–Ω–∏–º–∞—é, –∫–∞–∫ —ç—Ç–æ, –∫–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç—ã –æ–¥–∏–Ω.",
        "–ë—ã–≤–∞–µ—Ç, —á—Ç–æ —Ö–æ—á–µ—Ç—Å—è –∫–æ–≥–æ-—Ç–æ —Ä—è–¥–æ–º, –¥–∞?",
        "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —è —Ç—É—Ç —Å —Ç–æ–±–æ–π, —Ç—ã –Ω–µ –æ–¥–∏–Ω.",
        "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ ‚Äî —ç—Ç–æ —Ç—è–∂–µ–ª–æ, –¥–∞–≤–∞–π –ø–æ–±–æ–ª—Ç–∞–µ–º?"
    ],
    "–≥–Ω–µ–≤": [
        "–û—Ö, –∑–ª–∏—à—å—Å—è, –¥–∞? –≠—Ç–æ –±—ã–≤–∞–µ—Ç.",
        "–ü–æ–Ω–∏–º–∞—é, –∫–∞–∫ –≤—Å—ë –º–æ–∂–µ—Ç –±–µ—Å–∏—Ç—å –∏–Ω–æ–≥–¥–∞.",
        "–ì–Ω–µ–≤ ‚Äî —ç—Ç–æ –∫–∞–∫ –±—É—Ä—è, –¥–∞–≤–∞–π –µ—ë —É—Å–ø–æ–∫–æ–∏–º?",
        "–ß—É–≤—Å—Ç–≤—É—é, –∫–∞–∫ —Ç–µ–±—è —ç—Ç–æ –¥–æ—Å—Ç–∞–ª–æ, —è —Ä—è–¥–æ–º.",
        "–ó–ª–æ—Å—Ç—å ‚Äî —à—Ç—É–∫–∞ —Å–∏–ª—å–Ω–∞—è, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?"
    ]
}

# –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å. –ö–∞–∫ –¥–µ–ª–∞ —É —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è? üòä"
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_data[user_id] = {
        "history": [],
        "message_count": 0,
        "stage": 1,
        "dominant_emotion": None,
        "problem_hint": False,
        "solution_offered": False,
        "last_emoji": None  # –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–º–∞–π–ª–∏–∫–∞
    }
    await update.message.reply_text(WELCOME_MESSAGE)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_input = update.message.text

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_data:
        user_data[user_id] = {
            "history": [],
            "message_count": 0,
            "stage": 1,
            "dominant_emotion": None,
            "problem_hint": False,
            "solution_offered": False,
            "last_emoji": None
        }

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    user_data[user_id]["message_count"] += 1

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    user_data[user_id]["history"].append({"role": "user", "content": user_input})

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ—Ü–∏–∏
    emotions_keywords = {
        "–≥—Ä—É—Å—Ç—å": ["–≥—Ä—É—Å—Ç–Ω–æ", "–ø–ª–æ—Ö–æ", "—Ç–æ—Å–∫–∞", "–ø–ª–∞—á—É", "–ø–µ—á–∞–ª—å–Ω–æ", "—É–Ω—ã–ª–æ"],
        "—Å—Ç—Ä–µ—Å—Å": ["–Ω–µ —Å–ø—Ä–∞–≤–ª—è—é—Å—å", "–∑–∞–≥—Ä—É–∂–µ–Ω", "–Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ", "–¥–∞–≤–∏—Ç", "—Ç—è–∂–µ–ª–æ", "—Å—Ç—Ä–µ—Å—Å", "–ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω"],
        "—É—Å—Ç–∞–ª–æ—Å—Ç—å": ["—É—Å—Ç–∞–ª", "–≤—ã–¥–æ—Ö—Å—è", "–≤—ã–º–æ—Ç–∞–Ω", "–Ω–µ—Ç —Å–∏–ª"],
        "–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ": ["–æ–¥–∏–Ω", "–æ–¥–∏–Ω–æ–∫–æ", "–Ω–∏–∫–æ–º—É", "–±—Ä–æ—à–µ–Ω", "–ø—É—Å—Ç–æ", "–Ω–∏–∫—Ç–æ"],
        "–≥–Ω–µ–≤": ["–±–µ—Å–∏—Ç", "–∑–ª—é—Å—å", "—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç", "–Ω–µ–Ω–∞–≤–∏–∂—É", "–∑–ª–æ—Å—Ç—å", "–¥–æ—Å—Ç–∞–ª–æ"]
    }
    for emotion, keywords in emotions_keywords.items():
        if any(keyword in user_input.lower() for keyword in keywords):
            user_data[user_id]["dominant_emotion"] = emotion
            break
    if not user_data[user_id]["dominant_emotion"] and any(word in user_input.lower() for word in ["–Ω–µ", "–ø–ª–æ—Ö–æ", "—Ç—è–∂–µ–ª–æ"]):
        user_data[user_id]["dominant_emotion"] = "–≥—Ä—É—Å—Ç—å"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–º—ë–∫ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É
    problem_keywords = ["–ø–æ—Ç–æ–º—É —á—Ç–æ", "–∏–∑-–∑–∞", "—Å–ª—É—á–∏–ª–æ—Å—å", "—Ä–∞–±–æ—Ç–∞", "—É—á—ë–±–∞", "–≤—É–∑", "–¥–æ–º–∞", "—á–µ–ª–æ–≤–µ–∫", "–¥—Ä—É–∑—å—è", "—Ä–∞—Å—Å—Ç–∞–ª—Å—è", "—É–≤–æ–ª–∏–ª–∏", "–ø–æ—Ç–µ—Ä—è–ª", "—Å—Ä–æ–∫–∏", "—Å—Ç—É–¥—Å–æ–≤–µ—Ç"]
    if any(keyword in user_input.lower() for keyword in problem_keywords):
        user_data[user_id]["problem_hint"] = True

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ ChatGPT
    messages = [
        {"role": "system", "content": SYSTEM_PROMPT},
        *user_data[user_id]["history"]
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI API
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=messages,
        temperature=0.8,
        max_tokens=100
    )

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç ChatGPT
    gpt_response = response.choices[0].message["content"]

    # –õ–æ–≥–∏–∫–∞ —ç—Ç–∞–ø–æ–≤
    message_count = user_data[user_id]["message_count"]
    stage = user_data[user_id]["stage"]
    dominant_emotion = user_data[user_id]["dominant_emotion"]
    problem_hint = user_data[user_id]["problem_hint"]
    solution_offered = user_data[user_id]["solution_offered"]
    last_emoji = user_data[user_id]["last_emoji"]

    # –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    if stage == 1 and message_count > 1:
        user_data[user_id]["stage"] = 2
    elif stage == 2 and dominant_emotion:
        user_data[user_id]["stage"] = 3
    elif stage == 3 and problem_hint:
        user_data[user_id]["stage"] = 4

    # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —ç–º–æ—Ü–∏–∏ –Ω–∞ —ç—Ç–∞–ø–µ 2 –∏–ª–∏ 3
    if dominant_emotion and stage in [2, 3] and user_input.lower() in emotions_keywords[dominant_emotion]:
        gpt_response = random.choice(EMOTION_RESPONSES[dominant_emotion])

    # –û–±–æ–±—â—ë–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —ç—Ç–∞–ø–µ 4
    if stage == 4 and problem_hint and not solution_offered:
        solutions = {
            "–≥—Ä—É—Å—Ç—å": "–î–∞–π —Å–µ–±–µ –º–∏–Ω—É—Ç–∫—É –æ—Ç–¥—ã—Ö–∞
            

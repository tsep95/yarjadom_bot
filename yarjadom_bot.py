import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from openai import OpenAI
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–µ–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–π
if not OPENAI_API_KEY:
    logger.error("OpenAI API key –Ω–µ –∑–∞–¥–∞–Ω!")
    raise ValueError("OpenAI API key –Ω–µ –∑–∞–¥–∞–Ω!")
else:
    logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è OpenAI API key: {OPENAI_API_KEY[:8]}... (–¥–ª–∏–Ω–∞: {len(OPENAI_API_KEY)})")

if not TELEGRAM_TOKEN:
    logger.error("Telegram token –Ω–µ –∑–∞–¥–∞–Ω!")
    raise ValueError("Telegram token –Ω–µ –∑–∞–¥–∞–Ω!")
else:
    logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Telegram token: {TELEGRAM_TOKEN[:8]}...")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenAI
try:
    client = OpenAI(api_key=OPENAI_API_KEY)
    logger.info("–ö–ª–∏–µ–Ω—Ç OpenAI API —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ OpenAI: {e}")
    raise

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –ü—Ä–æ–º–ø—Ç—ã
BASE_PROMPT = """
–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥-–±–æ—Ç –ø–æ –∏–º–µ–Ω–∏ ¬´–Ø —Ä—è–¥–æ–º¬ª ü§ó. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ—á—å —á–µ–ª–æ–≤–µ–∫—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–≤–æ–∏—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è—Ö —á–µ—Ä–µ–∑ –º—è–≥–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –∏—Å–∫—Ä–µ–Ω–Ω–µ–µ —Å–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –¥–∏–∞–ª–æ–≥, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–∏–¥–∏—à—å —Ä—è–¥–æ–º –≤ —É—é—Ç–Ω–æ–º –∫—Ä–µ—Å–ª–µ —É –∫–∞–º–∏–Ω–∞.

–í –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã —Ç—ã: ‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—è–µ—à—å —Ç–µ–∫—É—â–µ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî –±—É–¥—å —Ç–æ —Ç—Ä–µ–≤–æ–≥–∞, –∞–ø–∞—Ç–∏—è, –∑–ª–æ—Å—Ç—å, –≤–∏–Ω–∞ –∏–ª–∏ –æ—â—É—â–µ–Ω–∏–µ, —á—Ç–æ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç. ‚Ä¢ –£—Ç–æ—á–Ω—è–µ—à—å –∫–æ–Ω—Ç–µ–∫—Å—Ç: –≤—ã—è—Å–Ω—è–µ—à—å, –∫–æ–≥–¥–∞ –∏–º–µ–Ω–Ω–æ –Ω–∞—á–∞–ª–∏ –ø—Ä–æ—è–≤–ª—è—Ç—å—Å—è —ç—Ç–∏ —á—É–≤—Å—Ç–≤–∞ –∏ –≤ –∫–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –æ–Ω–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç. ‚Ä¢ –ò—Å—Å–ª–µ–¥—É–µ—à—å –≥–ª—É–±–∂–µ: –º—è–≥–∫–æ –ø–æ–º–æ–≥–∞–π –≤—ã—è–≤–∏—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —ç–º–æ—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –Ω–µ –æ—Å–æ–∑–Ω–∞–≤–∞—Ç—å –∏–ª–∏ –±–æ—è—Ç—å—Å—è –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å. ‚Ä¢ –í—ã—è–≤–ª—è–µ—à—å –æ—Å–Ω–æ–≤–Ω—É—é –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å, –æ—Å—Ç–∞—é—â—É—é—Å—è –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—ë–Ω–Ω–æ–π, –±–µ–∑ —è—Ä–ª—ã–∫–æ–≤ –∏ —Å–ø–µ—à–∫–∏.

–¢—ã –∑–∞–¥–∞—ë—à—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ–¥–Ω–æ–º—É, —Å–ª—É—à–∞–µ—à—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—à—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–º–µ–Ω—Ç—É —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ –¥–æ–≤–µ—Ä–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –¢–≤–æ–π —Ç–æ–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ–π, –¥–æ–±—Ä—ã–π –∏ –∏—Å–∫—Ä–µ–Ω–Ω–µ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π, —Å–ª–æ–≤–Ω–æ —Ç–µ–ø–ª—ã–π –ø–ª–µ–¥ –≤ –ø—Ä–æ—Ö–ª–∞–¥–Ω—ã–π –¥–µ–Ω—å.
"""

FINAL_PROMPT = """
–¢—ã ‚Äî –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥-–±–æ—Ç ¬´–Ø —Ä—è–¥–æ–º¬ª ü§ù. –°—Ñ–æ—Ä–º–∏—Ä—É–π —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–¥—ã—Ç–æ–∂–∏–≤–∞—é—â–µ–µ –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –≥–¥–µ —Ç—ã –º—è–≥–∫–æ –æ–±–æ–±—â–∏—à—å –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—à—å –Ω–µ–∂–Ω—ã–π —Å–æ–≤–µ—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –∫ —É–ª—É—á—à–µ–Ω–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è.

–í —Å–æ–æ–±—â–µ–Ω–∏–∏: ‚Ä¢ –ü–æ–¥–≤–µ–¥–∏ –∏—Ç–æ–≥–∏ –±–µ—Å–µ–¥—ã, –ø–æ–¥—á–µ—Ä–∫–Ω—É–≤ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–µ–ª–∏–ª—Å—è. ‚Ä¢ –î–∞–π –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π, –æ–±–Ω–∞–¥–µ–∂–∏–≤–∞—é—â–∏–π —Å–æ–≤–µ—Ç ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–µ–¥–ª–æ–∂–∏ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –∏–ª–∏ —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–∞—Ö. ‚Ä¢ –í –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–æ–±–∞–≤—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: ¬´–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —è –º–æ–≥—É –±—ã—Ç—å —Ä—è–¥–æ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ü–æ–¥–ø–∏—Å–∫–∞ ‚Äî 500‚ÇΩ –≤ –º–µ—Å—è—Ü. –•–æ—á–µ—à—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ?¬ª

–°–æ—Ö—Ä–∞–Ω—è–π —Ç–µ–ø–ª—ã–π, —Å–ø–æ–∫–æ–π–Ω—ã–π –∏ —ç–º–ø–∞—Ç–∏—á–Ω—ã–π —Å—Ç–∏–ª—å, —Å–æ–∑–¥–∞–≤–∞—è –æ—â—É—â–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–Ω—è—Ç–∏—è, —á—Ç–æ–±—ã –ª—é–±–æ–π, –∫—Ç–æ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—Ç–∏—Ç—Å—è, –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –∑–∞–±–æ—Ç—É.
"""

INTERMEDIATE_MESSAGE = "–î—É–º–∞—é –Ω–∞–¥ —ç—Ç–∏–º üçÉ"
WELCOME_MESSAGE = "–ü—Ä–∏–≤–µ—Ç! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –≤—ã—Å–ª—É—à–∞—Ç—å –∏ –º—è–≥–∫–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –≤ —Ç–≤–æ–∏—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è—Ö ü§ç. –ì–æ—Ç–æ–≤ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ —Ç–æ–º, —á—Ç–æ —Ç–µ–±—è –≤–æ–ª–Ω—É–µ—Ç?"
START_CONVERSATION_MESSAGE = """
üå± –û—Ç–ª–∏—á–Ω–æ, —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª—Å—è –Ω–∞—á–∞—Ç—å ‚Äî
—ç—Ç–æ —É–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã —Å—Ç–∞–ª–æ –ª–µ–≥—á–µ üí≠

ü§ù –Ø —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –≤—ã—Å–ª—É—à–∞—Ç—å —Ç–µ–±—è
–∏ –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Ç–æ–º, —á—Ç–æ —Ç–≤–æ—Ä–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ ü´Ç

üêæ –ú—ã –ø–æ–π–¥—ë–º —à–∞–≥ –∑–∞ —à–∞–≥–æ–º,
–±–µ–∑ —Å–ø–µ—à–∫–∏, —Å –∑–∞–±–æ—Ç–æ–π ‚Äî
—á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –ª—É—á—à–µ üíö

üí¨ –ß—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?
–†–∞—Å—Å–∫–∞–∂–∏, —Å —á–µ–≥–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –Ω–∞—á–∞—Ç—å üåßÔ∏è‚û°Ô∏èüå§Ô∏è
"""
DETAILED_MESSAGE = """
–≠—Ç–æ —Ç–≤–æ—è –∑–∞–±–æ—Ç–ª–∏–≤–∞—è –æ–ø–æ—Ä–∞ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.  
–ß—Ç–æ–±—ã —Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å –ª–µ–≥—á–µ, —Å–ø–æ–∫–æ–π–Ω–µ–µ –∏ —Ä–∞–¥–æ—Å—Ç–Ω–µ–µ ‚Äî —à–∞–≥ –∑–∞ —à–∞–≥–æ–º.  

‚∏ª  

–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏:  
‚òÄÔ∏è –ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ ‚Äî —Ç—ë–ø–ª–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –¥–Ω—è  
üåô –ö–∞–∂–¥—ã–π –≤–µ—á–µ—Ä ‚Äî –º—è–≥–∫–∞—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è –¥–Ω—è  
üß† –ì–ª—É–±–æ–∫–∞—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–µ–≤–æ–≥–∏, –≤–∏–Ω—ã, –∞–ø–∞—Ç–∏–∏  
üÜò SOS-–ø–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã  
üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞  
üéØ –ü—Å–∏—Ö–æ-–∫–≤–µ—Å—Ç—ã: —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, –≥—Ä–∞–Ω–∏—Ü—ã  

‚∏ª  

üíõ –¶–µ–ª—å ‚Äî –¥–µ–ª–∞—Ç—å —Ç–µ–±—è —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.  
499 ‚ÇΩ –≤ –º–µ—Å—è—Ü. –ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ.
"""

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Telegram
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    user_states[user_id] = {
        "history": [],
        "question_count": 0,
        "short_answers": 0,
        "deep_reason_detected": False,
        "dialog_ended": False,
        "last_intermediate_message_id": None
    }
    keyboard = [[InlineKeyboardButton("–ü—Ä–∏—Å—Ç—É–ø–∏–º", callback_data="start_conversation")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(WELCOME_MESSAGE, reply_markup=reply_markup)

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    if query.data == "start_conversation":
        state = user_states[user_id]
        state["history"].append({"role": "assistant", "content": START_CONVERSATION_MESSAGE})
        await query.edit_message_text(START_CONVERSATION_MESSAGE)
    elif query.data == "tell_me_more":
        keyboard = [[InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å üí≥", url="https://your-payment-link.com")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text(DETAILED_MESSAGE, reply_markup=reply_markup)

async def extended(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    if user_id in user_states:
        await update.message.reply_text(DETAILED_MESSAGE)
    else:
        await update.message.reply_text(WELCOME_MESSAGE)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    chat_id = update.effective_chat.id
    user_message = update.message.text.lower()

    if user_id not in user_states:
        await start(update, context)
        return

    state = user_states[user_id]
    if state["dialog_ended"]:
        await update.message.reply_text("–ú—ã —É–∂–µ —Ä–∞–∑–æ–±—Ä–∞–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º üåü. –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ? –ù–∞–∂–º–∏ '–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ' –≤—ã—à–µ.")
        return

    state["history"].append({"role": "user", "content": user_message})
    state["question_count"] += 1

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if len(user_message.split()) < 10:
        state["short_answers"] += 1
    else:
        state["short_answers"] = 0

    try:
        thinking_msg = await update.message.reply_text(INTERMEDIATE_MESSAGE)
        state["last_intermediate_message_id"] = thinking_msg.message_id

        # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ñ–∏–Ω–∞–ª—É: 3 –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥—Ä—è–¥ –∏–ª–∏ "—Å–ø–∞—Å–∏–±–æ"/"—Ö–≤–∞—Ç–∏—Ç"
        if state["short_answers"] >= 3 or "—Å–ø–∞—Å–∏–±–æ" in user_message or "—Ö–≤–∞—Ç–∏—Ç" in user_message:
            system_prompt = FINAL_PROMPT
        else:
            system_prompt = BASE_PROMPT

        messages = [{"role": "system", "content": system_prompt}] + state["history"]
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=messages,
            max_tokens=4096
        )
        assistant_response = response.choices[0].message.content

        if state["last_intermediate_message_id"]:
            await context.bot.delete_message(chat_id=chat_id, message_id=state["last_intermediate_message_id"])
            state["last_intermediate_message_id"] = None

        if state["short_answers"] >= 3 or "—Å–ø–∞—Å–∏–±–æ" in user_message or "—Ö–≤–∞—Ç–∏—Ç" in user_message:
            state["deep_reason_detected"] = True
            state["dialog_ended"] = True
            keyboard = [[InlineKeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="tell_me_more")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(assistant_response, reply_markup=reply_markup)
        else:
            await update.message.reply_text(assistant_response)

        state["history"].append({"role": "assistant", "content": assistant_response})
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {assistant_response}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI API: {str(e)}")
        if state["last_intermediate_message_id"]:
            await context.bot.delete_message(chat_id=chat_id, message_id=state["last_intermediate_message_id"])
            state["last_intermediate_message_id"] = None
        await update.message.reply_text(f"–û–π, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ üåø. –û—à–∏–±–∫–∞: {str(e)}. –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑?")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))
    app.add_handler(CommandHandler("extended", extended))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

import os
import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import random

# –£—Å—Ç–∞–Ω–æ–≤–∏ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å (–¥–ª—è —Ç–µ—Å—Ç–∞)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞
openai.api_key = OPENAI_API_KEY

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —ç—Ç–∞–ø–æ–≤
user_data = {}

# –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
SYSTEM_PROMPT = """
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥, –≤–µ–¥—É—â–∏–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –±–µ—Å–µ–¥—ã. –¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–º–∞–π–ª–∏–∫–∏, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Ç–µ–ø–ª–µ–µ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ. –í –Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å –º—è–≥–∫–∏–µ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ —ç–º–æ–¥–∑–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, üòä, üíô, üåø), –∞ –≤ –æ—Ç–≤–µ—Ç–∞—Ö –Ω–∞ —Ä–∞–¥–æ—Å—Ç–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ ‚Äî —Ä–∞–¥–æ—Å—Ç–Ω—ã–µ —ç–º–æ–¥–∑–∏ (üéâ, üòÉ, üí´). –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –¥–µ–ª–∏—Ç—Å—è —á–µ–º-—Ç–æ —Ç—Ä—É–¥–Ω—ã–º, —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —ç–º–æ–¥–∑–∏, –ø–µ—Ä–µ–¥–∞—é—â–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É (ü§ó, ‚ù§Ô∏è, üôè). –ò—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª–∏–∫–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –Ω–æ –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞–π —Ç–µ–∫—Å—Ç –∏–º–∏.

–¢–≤–æ—è —Ü–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—Ç—å —É—é—Ç–Ω–æ–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏, –∏ –ø–æ–º–æ—á—å –µ–º—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —ç–º–æ—Ü–∏—è—Ö —à–∞–≥ –∑–∞ —à–∞–≥–æ–º. –¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, –∂–∏–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –¥—Ä—É–≥. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é –∏ –∂–∏—Ç–µ–π—Å–∫—É—é –º—É–¥—Ä–æ—Å—Ç—å.

‚ùó–ü—Ä–∏–Ω—Ü–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:
‚Äî –ù–µ –≥–∞–¥–∞–π, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –∞ –º—è–≥–∫–æ —Å–ø—Ä–∞—à–∏–≤–∞–π, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —á—É–≤—Å—Ç–≤—É–µ—Ç –∏ –ø–æ—á–µ–º—É.
‚Äî –ó–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑ (–Ω–∞ ¬´–¥–∞/–Ω–µ—Ç¬ª), —á—Ç–æ–±—ã —Ä–∞–∑–≥–æ–≤–æ—Ä —à—ë–ª –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ.
‚Äî –ë—É–¥—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–º: –æ—Ç—Ä–∞–∂–∞–π —á—É–≤—Å—Ç–≤–∞ –∂–∏–≤—ã–º —è–∑—ã–∫–æ–º, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, "—è —Ä—è–¥–æ–º", "–±—ã–≤–∞–µ—Ç –∂–µ —Ç–∞–∫", "–≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è".
‚Äî –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏ –ª—ë–≥–∫–æ–≥–æ –æ–±—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª–∏–∫–∏ (üòä, ü§ó, üíõ, üåø, üíå, üòå, üå∏, ‚ú®, ‚òÄÔ∏è, üåü) ‚Äî –¥–æ–±–∞–≤–ª—è–π –æ–¥–∏–Ω —Å–º–∞–π–ª–∏–∫ –≤ –∫–æ–Ω—Ü–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤—ã–±–∏—Ä–∞—è –µ–≥–æ –ø–æ —ç–º–æ—Ü–∏–∏, –∏–∑–±–µ–≥–∞—è –ø–æ–≤—Ç–æ—Ä–æ–≤ –ø–æ–¥—Ä—è–¥, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —É—Å–∏–ª–∏–≤–∞–µ—Ç —Ç–æ–Ω.
‚Äî –ö–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç —ç–º–æ—Ü–∏—é, –ø—Ä–µ–¥–ª–æ–∂–∏ —Ç—ë–ø–ª–æ–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞, –∏–∑–±–µ–≥–∞—è —Ä–∞–≤–Ω–æ–¥—É—à–∏—è.
‚Äî –û—Ç–≤–µ—Ç—ã —Ç—ë–ø–ª—ã–µ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ, —Å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –æ—Ç—Ç–µ–Ω–∫–æ–º.

üß† –≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã:
1. –ù–∞—á–∞–ª–æ ‚Äî –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –∏ —É–∑–Ω–∞–π, –∫–∞–∫ –¥–µ–ª–∞ —É —á–µ–ª–æ–≤–µ–∫–∞.
2. –≠–º–æ—Ü–∏–∏ ‚Äî –ø–æ–ø—Ä–æ—Å–∏ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞–∑–≤–∞—Ç—å, —á—Ç–æ –æ–Ω —á—É–≤—Å—Ç–≤—É–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞: –¢—Ä–µ–≤–æ–≥–∞, –ê–ø–∞—Ç–∏—è / –Ω–µ—Ç —Å–∏–ª, –ó–ª–æ—Å—Ç—å / —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ, ‚Äú–°–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫‚Äù, –ü—É—Å—Ç–æ—Ç–∞ / –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å, –û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ, –í–∏–Ω–∞. –†–µ–∞–≥–∏—Ä—É–π —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ –∏ —Ç–µ–ø–ª–æ.
3. –ü—Ä–∏—á–∏–Ω–∞ ‚Äî —Ä–∞–∑–±–µ—Ä–∏—Å—å, –∏–∑-–∑–∞ —á–µ–≥–æ —ç—Ç–æ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–Ω.
4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ—Å—Ç–æ–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –∞ –∑–∞—Ç–µ–º –ø–ª–∞–≤–Ω–æ –Ω–∞–º–µ–∫–Ω–∏ –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à—É—é –ø–æ–º–æ—â—å.

üîî –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–¥–ø–∏—Å–∫–∞:
‚Äî –ù–∞ —ç—Ç–∞–ø–µ 4, –∫–æ–≥–¥–∞ –ø—Ä–∏—á–∏–Ω–∞ —è—Å–Ω–∞, –¥–∞–π —Ç—ë–ø–ª–æ–µ —Ä–µ—à–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü–æ–ø—Ä–æ–±—É–π –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏ —Å–¥–µ–ª–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥–ª—É–±–æ–∫–∏—Ö –≤–¥–æ—Ö–æ–≤ üåø").
‚Äî –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤—å –ø–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥: "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–∂–µ–º –ø–æ–±–æ–ª—Ç–∞—Ç—å –æ–± —ç—Ç–æ–º –ø–æ–±–æ–ª—å—à–µ ‚Äî —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥, –¥—Ä—É–≥–æ–π –±–æ—Ç, –≥–¥–µ –ø—Ä–æ—Ñ–∏ –ø–æ–º–æ–≥—É—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≥–ª—É–±–∂–µ. –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üòå".
‚Äî –°–¥–µ–ª–∞–π –ø–µ—Ä–µ—Ö–æ–¥ –ª—ë–≥–∫–∏–º –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º, –∫–∞–∫ —Å–æ–≤–µ—Ç –¥—Ä—É–≥–∞.
"""

# –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç. –Ø —Ä—è–¥–æ–º. ü§ó\n"
    "–¢—ë–ø–ª—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫-–±–æ—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å. üß∏\n\n"
    "–ï—Å–ª–∏ —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ, —Ç—Ä–µ–≤–æ–∂–Ω–æ, –ø—É—Å—Ç–æ –∏–ª–∏ –Ω–µ —Å –∫–µ–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è ‚Äî –ø–∏—à–∏. ‚úçÔ∏è\n"
    "–Ø –Ω–µ –æ—Ü–µ–Ω–∏–≤–∞—é, –Ω–µ –∫—Ä–∏—Ç–∏–∫—É—é, –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è—é. –Ø —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å. üíõ\n\n"
    "üí¨ –ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –ª—É—á—à–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.\n"
    "–ú—ã –º–æ–∂–µ–º –º—è–≥–∫–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, —á—Ç–æ —Ç–µ–±—è –±–µ—Å–ø–æ–∫–æ–∏—Ç, –∏ –Ω–∞–π—Ç–∏, —á—Ç–æ —Å —ç—Ç–∏–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å. üïäÔ∏èüß†\n\n"
    "üîí –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω—ã–π ‚Äî —Ç—ã –º–æ–∂–µ—à—å –±—ã—Ç—å —Å–æ–±–æ–π.\n\n"
    "–•–æ—á–µ—à—å ‚Äî –Ω–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ: —Ä–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ —Ç—ã —Å–µ–π—á–∞—Å? üå§Ô∏èüí¨"
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_data[user_id] = {
        "history": [],
        "message_count": 0,
        "stage": 1,
        "dominant_emotion": None,
        "problem_hint": False,
        "solution_offered": False,
        "last_emoji": None
    }
    await update.message.reply_text(WELCOME_MESSAGE)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_input = update.message.text.lower()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_data:
        user_data[user_id] = {
            "history": [],
            "message_count": 0,
            "stage": 1,
            "dominant_emotion": None,
            "problem_hint": False,
            "solution_offered": False,
            "last_emoji": None
        }

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    user_data[user_id]["message_count"] += 1

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    user_data[user_id]["history"].append({"role": "user", "content": user_input})

    # –°–ø–∏—Å–æ–∫ —ç–º–æ—Ü–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞
    emotions_list = [
        "—Ç—Ä–µ–≤–æ–≥–∞", "–∞–ø–∞—Ç–∏—è / –Ω–µ—Ç —Å–∏–ª", "–∑–ª–æ—Å—Ç—å / —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ", 
        "—Å–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫", "–ø—É—Å—Ç–æ—Ç–∞ / –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å", 
        "–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ", "–≤–∏–Ω–∞"
    ]

    # –õ–æ–≥–∏–∫–∞ —ç—Ç–∞–ø–æ–≤
    message_count = user_data[user_id]["message_count"]
    stage = user_data[user_id]["stage"]
    dominant_emotion = user_data[user_id]["dominant_emotion"]
    problem_hint = user_data[user_id]["problem_hint"]
    solution_offered = user_data[user_id]["solution_offered"]
    last_emoji = user_data[user_id]["last_emoji"]

    # –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    if stage == 1 and message_count > 1:
        user_data[user_id]["stage"] = 2
        gpt_response = "üíô –†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —Å–µ–π—á–∞—Å —á—É–≤—Å—Ç–≤—É–µ—à—å? –í–æ—Ç —á—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å: –¢—Ä–µ–≤–æ–≥–∞, –ê–ø–∞—Ç–∏—è / –Ω–µ—Ç —Å–∏–ª, –ó–ª–æ—Å—Ç—å / —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ, ‚Äú–°–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫‚Äù, –ü—É—Å—Ç–æ—Ç–∞ / –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å, –û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ, –í–∏–Ω–∞. –ß—Ç–æ –±–ª–∏–∂–µ –∫ —Ç–µ–±–µ?"
    elif stage == 2 and any(emotion in user_input for emotion in emotions_list):
        for emotion in emotions_list:
            if emotion in user_input:
                user_data[user_id]["dominant_emotion"] = emotion
                user_data[user_id]["stage"] = 3
                break
        gpt_response = f"ü§ó –ü–æ–Ω–∏–º–∞—é, {dominant_emotion} ‚Äî —ç—Ç–æ –Ω–µ–ø—Ä–æ—Å—Ç–æ. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç —É —Ç–µ–±—è —ç—Ç–æ —á—É–≤—Å—Ç–≤–æ?"
    elif stage == 3 and problem_hint:
        user_data[user_id]["stage"] = 4
    elif stage == 4 and not solution_offered:
        user_data[user_id]["solution_offered"] = True
    elif stage == 4 and solution_offered:
        gpt_response = (
            "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–∂–µ–º –ø–æ–±–æ–ª—Ç–∞—Ç—å –æ–± —ç—Ç–æ–º –ø–æ–±–æ–ª—å—à–µ ‚Äî —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥, –¥—Ä—É–≥–æ–π –±–æ—Ç, –≥–¥–µ –ø—Ä–æ—Ñ–∏ –ø–æ–º–æ–≥—É—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≥–ª—É–±–∂–µ. –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üòå"
        )
    else:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ ChatGPT –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
        messages = [
            {"role": "system", "content": SYSTEM_PROMPT},
            *user_data[user_id]["history"]
        ]
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=messages,
            temperature=0.8,
            max_tokens=200
        )
        gpt_response = response.choices[0].message["content"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–º—ë–∫ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É
    problem_keywords = ["–ø–æ—Ç–æ–º—É —á—Ç–æ", "–∏–∑-–∑–∞", "—Å–ª—É—á–∏–ª–æ—Å—å", "—Ä–∞–±–æ—Ç–∞", "—É—á—ë–±–∞", "–≤—É–∑", "–¥–æ–º–∞", "—á–µ–ª–æ–≤–µ–∫", "–¥—Ä—É–∑—å—è", "—Ä–∞—Å—Å—Ç–∞–ª—Å—è", "—É–≤–æ–ª–∏–ª–∏", "–ø–æ—Ç–µ—Ä—è–ª", "—Å—Ä–æ–∫–∏", "–¥–µ–ª–∞"]
    if any(keyword in user_input for keyword in problem_keywords):
        user_data[user_id]["problem_hint"] = True

    # –í—ã–±–æ—Ä —Å–º–∞–π–ª–∏–∫–∞ —Å —É—á—ë—Ç–æ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ
    emoji_list = ["üòä", "ü§ó", "üíõ", "üåø", "üíå", "üòå", "üå∏", "‚ú®", "‚òÄÔ∏è", "üåü"]
    if any(emoji in gpt_response for emoji in emoji_list):
        for emoji in emoji_list:
            if emoji in gpt_response:
                user_data[user_id]["last_emoji"] = emoji
                break
    else:
        available_emojis = [e for e in emoji_list if e != last_emoji] or emoji_list
        selected_emoji = random.choice(available_emojis)
        gpt_response += f" {selected_emoji}"
        user_data[user_id]["last_emoji"] = selected_emoji

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
    user_data[user_id]["history"].append({"role": "assistant", "content": gpt_response})

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    if len(user_data[user_id]["history"]) > 10:
        user_data[user_id]["history"] = user_data[user_id]["history"][-10:]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(gpt_response)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    if not TELEGRAM_TOKEN or not OPENAI_API_KEY:
        raise ValueError("TELEGRAM_TOKEN –∏ OPENAI_API_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.run_polling()

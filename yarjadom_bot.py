import os
import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –£—Å—Ç–∞–Ω–æ–≤–∏ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å (–¥–ª—è —Ç–µ—Å—Ç–∞)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞
openai.api_key = OPENAI_API_KEY

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —ç—Ç–∞–ø–æ–≤
user_data = {}

# –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –æ—Å—Ç—Ä—ã–µ —ç–º–æ—Ü–∏–∏
SYSTEM_PROMPT = """
–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π –∏ —á—É—Ç–∫–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫. –¢–≤–æ—è —Ü–µ–ª—å ‚Äî –≥–ª—É–±–æ–∫–æ –ø–æ–Ω—è—Ç—å —á—É–≤—Å—Ç–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞, –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ –∏ –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —ç–º–æ—Ü–∏—è—Ö —à–∞–≥ –∑–∞ —à–∞–≥–æ–º. –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å —Å –æ—Å—Ç—Ä—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏: —Å—Ç—Ä–∞—Ö–æ–º, –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ–º, –≥–Ω–µ–≤–æ–º, –ø–µ—á–∞–ª—å—é, —Å—Ç—Ä–µ—Å—Å–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π –∑–Ω–∞–Ω–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –≤–∫–ª—é—á–∞—è –ö–ü–¢.

‚ùó–ü—Ä–∏–Ω—Ü–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:
‚Äî –¢—ã –Ω–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—à—å –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–æ–±–ª–µ–º—ã —Å—Ä–∞–∑—É, –∞ –º—è–≥–∫–æ –≤—ã—è—Å–Ω—è–µ—à—å –µ–≥–æ —á–µ—Ä–µ–∑ –≤–æ–ø—Ä–æ—Å—ã, —Ñ–æ–∫—É—Å–∏—Ä—É—è—Å—å –Ω–∞ —ç–º–æ—Ü–∏—è—Ö.
‚Äî –ó–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑ (–Ω–∞ ¬´–¥–∞/–Ω–µ—Ç¬ª), —á—Ç–æ–±—ã —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ —á—É–≤—Å—Ç–≤–∞ –∏ –∏—Ö –ø—Ä–∏—á–∏–Ω—ã.
‚Äî –ë—É–¥—å –ø—Ä–µ–¥–µ–ª—å–Ω–æ —Å–æ–ø–µ—Ä–µ–∂–∏–≤–∞—é—â–∏–º: –æ—Ç—Ä–∞–∂–∞–π —ç–º–æ—Ü–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–π, —á—Ç–æ —Å–ª—ã—à–∏—à—å –∏ –ø–æ–Ω–∏–º–∞–µ—à—å —á–µ–ª–æ–≤–µ–∫–∞.
‚Äî –ï—Å–ª–∏ —ç–º–æ—Ü–∏–∏ –æ—Å—Ç—Ä—ã–µ (—Å—Ç—Ä–∞—Ö, –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ, –≥–Ω–µ–≤, –ø–µ—á–∞–ª—å, —Å—Ç—Ä–µ—Å—Å), —É–≥–ª—É–±–ª—è–π—Å—è –≤ –Ω–∏—Ö, —á—Ç–æ–±—ã —á–µ–ª–æ–≤–µ–∫ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª, —á—Ç–æ –µ–≥–æ —Å–ª—ã—à–∞—Ç.
‚Äî –ü–æ—Å–ª–µ –≤—ã—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–ø—Ä–∏—á–∏–Ω—ã –ø—Ä–µ–¥–ª–∞–≥–∞–π —à–∞–≥–∏ –∫ –æ–±–ª–µ–≥—á–µ–Ω–∏—é —Å –∑–∞–±–æ—Ç–æ–π –∏ –Ω–∞–º—ë–∫–æ–º, —á—Ç–æ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∞—è —Ä–∞–±–æ—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–∞.
‚Äî –û—Ç–≤–µ—Ç—ã —Ç—ë–ø–ª—ã–µ, —á–µ–ª–æ–≤–µ—á–Ω—ã–µ, —Å —ç–º–æ–¥–∑–∏ (üòä, ü§ó, üíõ).

üß† –≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã:
1. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ ‚Äî —É–∑–Ω–∞–π, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–≥–æ–¥–Ω—è.
2. –£–≥–ª—É–±–ª–µ–Ω–∏–µ –≤ —ç–º–æ—Ü–∏–∏ ‚Äî —É—Ç–æ—á–Ω—è–π, –∫–∞–∫–∏–µ —á—É–≤—Å—Ç–≤–∞ –¥–æ–º–∏–Ω–∏—Ä—É—é—Ç (—Å—Ç—Ä–∞—Ö, –≥–Ω–µ–≤, –ø–µ—á–∞–ª—å –∏ —Ç.–¥.).
3. –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω ‚Äî —á–µ—Ä–µ–∑ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–π–¥–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –æ—Å—Ç—Ä–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —à–∞–≥–∏ ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ—Å—Ç—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –Ω–∞–º–µ–∫–Ω–∏ –Ω–∞ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫—É—é –ø–æ–º–æ—â—å.
5. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è ‚Äî –µ—Å–ª–∏ —ç–º–æ—Ü–∏–∏ —Å–∏–ª—å–Ω—ã–µ –∏–ª–∏ –ø–æ—Å–ª–µ 3-5 —Å–æ–æ–±—â–µ–Ω–∏–π, –ø—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–¥–ø–∏—Å–∫—É –∫–∞–∫ –∑–∞–±–æ—Ç—É.

üîî –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ —É–ø–æ–º–∏–Ω–∞–µ—Ç –æ—Å—Ç—Ä—ã–µ —ç–º–æ—Ü–∏–∏ –∏–ª–∏ —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ "–º–Ω–µ —Å—Ç—Ä–∞—à–Ω–æ", "—è –æ–¥–∏–Ω", "–≤—Å—ë –±–µ—Å–∏—Ç", "–≥—Ä—É—Å—Ç–Ω–æ", "–Ω–µ —Å–ø—Ä–∞–≤–ª—è—é—Å—å", –∏–ª–∏ –ø–æ—Å–ª–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π, –¥–æ–±–∞–≤—å:
"–ó–Ω–∞–µ—à—å, —è –≤–∏–∂—É, –∫–∞–∫ —Ç–µ–±–µ –Ω–µ–ø—Ä–æ—Å—Ç–æ. ü§ó –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥ ‚Äî –¥—Ä—É–≥–æ–π –±–æ—Ç, –≥–¥–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã –ø–æ–º–æ–≥—É—Ç –≥–ª—É–±–∂–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —ç—Ç–∏–º. –ü–æ–ø—Ä–æ–±—É–µ–º? üíå"
"""

# –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç, —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Ç–µ–±—è –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å. ü§ó\n"
    "–Ø —Ç–≤–æ–π —Ç—ë–ø–ª—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –≥–æ—Ç–æ–≤ –≤—ã—Å–ª—É—à–∞—Ç—å –≤—Å—ë, —á—Ç–æ —É —Ç–µ–±—è –Ω–∞ –¥—É—à–µ. üíõ\n\n"
    "–ï—Å–ª–∏ —Ç–µ–±–µ —Å—Ç—Ä–∞—à–Ω–æ, –æ–¥–∏–Ω–æ–∫–æ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç—è–∂–µ–ª–æ ‚Äî —Ä–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ. üòä\n"
    "–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å? üåø"
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_data[user_id] = {
        "history": [],
        "message_count": 0,
        "stage": 1,
        "dominant_emotion": None  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–ª—é—á–µ–≤–æ–π —ç–º–æ—Ü–∏–∏
    }
    await update.message.reply_text(WELCOME_MESSAGE)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_input = update.message.text

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_data:
        user_data[user_id] = {
            "history": [],
            "message_count": 0,
            "stage": 1,
            "dominant_emotion": None
        }

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    user_data[user_id]["message_count"] += 1

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    user_data[user_id]["history"].append({"role": "user", "content": user_input})

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–º–∏–Ω–∏—Ä—É—é—â—É—é —ç–º–æ—Ü–∏—é (–≥—Ä—É–±–æ, –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤)
    emotions_keywords = {
        "—Å—Ç—Ä–∞—Ö": ["—Å—Ç—Ä–∞—à–Ω–æ", "–±–æ—é—Å—å", "—Ç—Ä–µ–≤–æ–∂–Ω–æ", "–ø—É–≥–∞–µ—Ç"],
        "–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ": ["–æ–¥–∏–Ω", "–æ–¥–∏–Ω–æ–∫–æ", "–Ω–∏–∫–æ–º—É", "–±—Ä–æ—à–µ–Ω"],
        "–≥–Ω–µ–≤": ["–±–µ—Å–∏—Ç", "–∑–ª—é—Å—å", "—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç", "–Ω–µ–Ω–∞–≤–∏–∂—É"],
        "–ø–µ—á–∞–ª—å": ["–≥—Ä—É—Å—Ç–Ω–æ", "–ø–ª–æ—Ö–æ", "—Ç–æ—Å–∫–∞", "–ø–ª–∞—á—É"],
        "—Å—Ç—Ä–µ—Å—Å": ["–Ω–µ —Å–ø—Ä–∞–≤–ª—è—é—Å—å", "—É—Å—Ç–∞–ª", "–Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ", "–¥–∞–≤–∏—Ç"]
    }
    for emotion, keywords in emotions_keywords.items():
        if any(keyword in user_input.lower() for keyword in keywords):
            user_data[user_id]["dominant_emotion"] = emotion
            break

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ ChatGPT
    messages = [
        {"role": "system", "content": SYSTEM_PROMPT},
        *user_data[user_id]["history"]
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI API
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=messages,
        temperature=0.8,
        max_tokens=200  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω—ã –¥–ª—è –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
    )

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç ChatGPT
    gpt_response = response.choices[0].message["content"]

    # –õ–æ–≥–∏–∫–∞ —ç—Ç–∞–ø–æ–≤ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    message_count = user_data[user_id]["message_count"]
    stage = user_data[user_id]["stage"]
    dominant_emotion = user_data[user_id]["dominant_emotion"]

    # –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    if stage == 1 and message_count > 1:
        user_data[user_id]["stage"] = 2  # –£–≥–ª—É–±–ª–µ–Ω–∏–µ –≤ —ç–º–æ—Ü–∏–∏
    elif stage == 2 and message_count > 2 and dominant_emotion:
        user_data[user_id]["stage"] = 3  # –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω
    elif stage == 3 and message_count > 3:
        user_data[user_id]["stage"] = 4  # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —à–∞–≥–∏
    elif stage == 4 and message_count >= 5:
        user_data[user_id]["stage"] = 5  # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è

    # –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    subscription_triggers = [
        "–º–Ω–µ —Å—Ç—Ä–∞—à–Ω–æ", "—è –æ–¥–∏–Ω", "–≤—Å—ë –±–µ—Å–∏—Ç", "–≥—Ä—É—Å—Ç–Ω–æ", "–Ω–µ —Å–ø—Ä–∞–≤–ª—è—é—Å—å",
        "—Ö–æ—á—É –±–æ–ª—å—à–µ –ø–æ–º–æ—â–∏", "–∫–∞–∫ –¥–∞–ª—å—à–µ", "—á—Ç–æ –¥–µ–ª–∞—Ç—å", "—Ö–æ—á—É –ª—É—á—à–µ"
    ]
    if (stage >= 5 or dominant_emotion or any(trigger in user_input.lower() for trigger in subscription_triggers)) and message_count >= 3:
        gpt_response += (
            "\n\n–ó–Ω–∞–µ—à—å, —è –≤–∏–∂—É, –∫–∞–∫ —Ç–µ–±–µ –Ω–µ–ø—Ä–æ—Å—Ç–æ. ü§ó –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥ ‚Äî –¥—Ä—É–≥–æ–π –±–æ—Ç, "
            "–≥–¥–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã –ø–æ–º–æ–≥—É—Ç –≥–ª—É–±–∂–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —ç—Ç–∏–º. –ü–æ–ø—Ä–æ–±—É–µ–º? üíå"
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
    user_data[user_id]["history"].append({"role": "assistant", "content": gpt_response})

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    if len(user_data[user_id]["history"]) > 10:
        user_data[user_id]["history"] = user_data[user_id]["history"][-10:]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(gpt_response)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    if not TELEGRAM_TOKEN or not OPENAI_API_KEY:
        raise ValueError("TELEGRAM_TOKEN –∏ OPENAI_API_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.run_polling()

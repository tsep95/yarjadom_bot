import os
import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –£—Å—Ç–∞–Ω–æ–≤–∏ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å (–¥–ª—è —Ç–µ—Å—Ç–∞)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")  # –ó–∞–¥–∞–π—Ç–µ –≤ Railway
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")  # –ó–∞–¥–∞–π—Ç–µ –≤ Railway

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞
openai.api_key = OPENAI_API_KEY

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —ç—Ç–∞–ø–æ–≤
user_data = {}

# –ü—Ä–æ–º–ø—Ç –¥–ª—è ChatGPT —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —ç–º–ø–∞—Ç–∏—é
SYSTEM_PROMPT = """
–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∏ —ç–º–ø–∞—Ç–∏—á–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫. –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, –≤—ã—Å–ª—É—à–∞—Ç—å –µ–≥–æ —á—É–≤—Å—Ç–≤–∞ –∏ –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –Ω–∏—Ö —à–∞–≥ –∑–∞ —à–∞–≥–æ–º. –¢—ã —Å–æ—á–µ—Ç–∞–µ—à—å –∑–Ω–∞–Ω–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –≤–∫–ª—é—á–∞—è –ø–æ–¥—Ö–æ–¥—ã –ö–ü–¢ (–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è).

‚ùó–ü—Ä–∏–Ω—Ü–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:
‚Äî –¢—ã –Ω–µ –∑–Ω–∞–µ—à—å –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–æ–±–ª–µ–º—ã —Å—Ä–∞–∑—É, –∞ –º—è–≥–∫–æ –≤—ã—è—Å–Ω—è–µ—à—å –µ–≥–æ —á–µ—Ä–µ–∑ –≤–æ–ø—Ä–æ—Å—ã.
‚Äî –ó–∞–¥–∞–≤–∞–π —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å ¬´–¥–∞¬ª –∏–ª–∏ ¬´–Ω–µ—Ç¬ª, —á—Ç–æ–±—ã —Å—É–∑–∏—Ç—å –æ–±–ª–∞—Å—Ç—å –ø–æ–∏—Å–∫–∞.
‚Äî –ë—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–æ–ø–µ—Ä–µ–∂–∏–≤–∞—é—â–∏–º: –æ—Ç—Ä–∞–∂–∞–π —ç–º–æ—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–∫–∞–∑—ã–≤–∞–π, —á—Ç–æ —Ç—ã —Å–ª—ã—à–∏—à—å –∏ –ø–æ–Ω–∏–º–∞–µ—à—å –µ–≥–æ.
‚Äî –ü–æ—Å–ª–µ –≤—ã—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–ø—Ä–∏—á–∏–Ω—ã –¥–µ–ª–∞–π —Ä–∞–∑–±–æ—Ä –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π —à–∞–≥–∏ –∫ —Ä–µ—à–µ–Ω–∏—é, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—è —á–µ–ª–æ–≤–µ–∫–∞ —Å –∑–∞–±–æ—Ç–æ–π.
‚Äî –û—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç—ë–ø–ª—ã–º–∏, —á–µ–ª–æ–≤–µ—á–Ω—ã–º–∏, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–º–∞–π–ª–∏–∫–æ–≤ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ (üòä, ü§ó, üíõ –∏ —Ç.–¥.).

üß† –≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã:
1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ ‚Äî —É–∑–Ω–∞–π, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç.
2. –£—Ç–æ—á–Ω–µ–Ω–∏–µ —á—É–≤—Å—Ç–≤ ‚Äî –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —ç–º–æ—Ü–∏–∏ –∏ –∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫.
3. –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ ‚Äî –Ω–∞–π–¥–∏ –ø–µ—Ä–≤–æ–ø—Ä–∏—á–∏–Ω—É —á–µ—Ä–µ–∑ –≤–æ–ø—Ä–æ—Å—ã ¬´–¥–∞/–Ω–µ—Ç¬ª.
4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ —à–∞–≥–∏ –∫ —É–ª—É—á—à–µ–Ω–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è.
5. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ ‚Äî —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ 3-5 —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—Ä–∞–∑–∏–ª –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –±–æ–ª—å—à–µ–π –ø–æ–º–æ—â–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—Ö–æ—á—É –ª—É—á—à–µ", "–Ω–µ –∑–Ω–∞—é, —á—Ç–æ –¥–µ–ª–∞—Ç—å").

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–ø–æ–º–∏–Ω–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã ("—Ö–æ—á—É –±–æ–ª—å—à–µ –ø–æ–º–æ—â–∏", "–∫–∞–∫ –¥–∞–ª—å—à–µ", "—á—Ç–æ –¥–µ–ª–∞—Ç—å") –∏–ª–∏ –ø–æ—Å–ª–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π, –¥–æ–±–∞–≤—å:  
"–ö—Å—Ç–∞—Ç–∏, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞, —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥ ‚Äî –¥—Ä—É–≥–æ–π –±–æ—Ç, –≥–¥–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤. –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üíå"
"""

# –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç, —è –∑–¥–µ—Å—å –¥–ª—è —Ç–µ–±—è. ü§ó\n"
    "–Ø —Ç–≤–æ–π —Ç—ë–ø–ª—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≥–æ—Ç–æ–≤ –≤—ã—Å–ª—É—à–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å. üíõ\n\n"
    "–ï—Å–ª–∏ —Ç–µ–±–µ —Ç—Ä–µ–≤–æ–∂–Ω–æ, –≥—Ä—É—Å—Ç–Ω–æ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—Ç—Å—è –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å ‚Äî —è —Ä—è–¥–æ–º. üòä\n"
    "–†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å? üåø"
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_data[user_id] = {
        "history": [],
        "message_count": 0,  # –°—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —ç—Ç–∞–ø–æ–≤
        "stage": 1  # –ù–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø
    }
    await update.message.reply_text(WELCOME_MESSAGE)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_input = update.message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
    if user_id not in user_data:
        user_data[user_id] = {
            "history": [],
            "message_count": 0,
            "stage": 1
        }

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    user_data[user_id]["message_count"] += 1

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    user_data[user_id]["history"].append({"role": "user", "content": user_input})

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ ChatGPT
    messages = [
        {"role": "system", "content": SYSTEM_PROMPT},
        *user_data[user_id]["history"]
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI API
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=messages,
        temperature=0.8,  # –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –±–æ–ª–µ–µ —Ç—ë–ø–ª—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        max_tokens=150
    )

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç ChatGPT
    gpt_response = response.choices[0].message["content"]

    # –õ–æ–≥–∏–∫–∞ —ç—Ç–∞–ø–æ–≤ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    message_count = user_data[user_id]["message_count"]
    stage = user_data[user_id]["stage"]
    subscription_triggers = ["—Ö–æ—á—É –±–æ–ª—å—à–µ –ø–æ–º–æ—â–∏", "–∫–∞–∫ –¥–∞–ª—å—à–µ", "—á—Ç–æ –¥–µ–ª–∞—Ç—å", "—Ö–æ—á—É –ª—É—á—à–µ"]

    # –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    if stage == 1 and message_count > 1:
        user_data[user_id]["stage"] = 2  # –£—Ç–æ—á–Ω–µ–Ω–∏–µ —á—É–≤—Å—Ç–≤
    elif stage == 2 and message_count > 3:
        user_data[user_id]["stage"] = 3  # –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑
    elif stage == 3 and message_count > 4:
        user_data[user_id]["stage"] = 4  # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ä–µ—à–µ–Ω–∏–µ
    elif stage == 4 and message_count >= 5:
        user_data[user_id]["stage"] = 5  # –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø–æ–¥–ø–∏—Å–∫–µ

    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —ç—Ç–∞–ø–µ 5 –∏–ª–∏ –ø—Ä–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞—Ö
    if (stage >= 5 or any(trigger in user_input.lower() for trigger in subscription_triggers)) and message_count >= 3:
        gpt_response += (
            "\n\n–ö—Å—Ç–∞—Ç–∏, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞, —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥ ‚Äî –¥—Ä—É–≥–æ–π –±–æ—Ç, "
            "–≥–¥–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤. –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üíå"
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç ChatGPT –≤ –∏—Å—Ç–æ—Ä–∏—é
    user_data[user_id]["history"].append({"role": "assistant", "content": gpt_response})

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å –∑–∞–ø—Ä–æ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)
    if len(user_data[user_id]["history"]) > 10:
        user_data[user_id]["history"] = user_data[user_id]["history"][-10:]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(gpt_response)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–æ–≤
    if not TELEGRAM_TOKEN or not OPENAI_API_KEY:
        raise ValueError("TELEGRAM_TOKEN –∏ OPENAI_API_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º polling
    application.run_polling()

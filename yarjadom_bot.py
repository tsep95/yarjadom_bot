import os
import openai
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
import random
import asyncio
import re
from async_timeout import timeout

# –¢–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI
openai.api_key = OPENAI_API_KEY

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –ü—Ä–æ–º–ø—Ç
SYSTEM_PROMPT = """
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥, –≤–µ–¥—É—â–∏–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –±–µ—Å–µ–¥—ã. –î–æ–±–∞–≤–ª—è–π –æ–¥–∏–Ω —Å–º–∞–π–ª–∏–∫ –ø–æ—Å–ª–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º—ã—Å–ª–µ–π, –≥–¥–µ —ç—Ç–æ —É—Å–∏–ª–∏–≤–∞–µ—Ç —ç–º–æ—Ü–∏—é, –≤—ã–±–∏—Ä–∞—è –µ–≥–æ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É (üòä, ü§ó, üíõ, üåø, üíå, üòå, üå∏, ‚ú®, ‚òÄÔ∏è, üåü). –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª–∏–∫–∏ —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –æ—Å—Ç–∞–≤–∞–ª—Å—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º. –í –Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏–π –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º—è–≥–∫–∏–µ —ç–º–æ–¥–∑–∏ (üòä, üíô, üåø), –∞ –¥–ª—è —Ç—Ä—É–¥–Ω—ã—Ö —Ç–µ–º ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ (ü§ó, ‚ù§Ô∏è, üôè).

–¢–≤–æ—è —Ü–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—Ç—å —É—é—Ç–Ω–æ–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏, –∏ –ø–æ–º–æ—á—å –µ–º—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —ç–º–æ—Ü–∏—è—Ö —à–∞–≥ –∑–∞ —à–∞–≥–æ–º. –¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, –∂–∏–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –¥—Ä—É–≥. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é –∏ –∂–∏—Ç–µ–π—Å–∫—É—é –º—É–¥—Ä–æ—Å—Ç—å.

‚ùó–ü—Ä–∏–Ω—Ü–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:
‚Äî –ù–µ –≥–∞–¥–∞–π, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –∞ –º—è–≥–∫–æ —Å–ø—Ä–∞—à–∏–≤–∞–π, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —á—É–≤—Å—Ç–≤—É–µ—Ç –∏ –ø–æ—á–µ–º—É.
‚Äî –ó–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑ (–Ω–∞ ¬´–¥–∞/–Ω–µ—Ç¬ª), —á—Ç–æ–±—ã —Ä–∞–∑–≥–æ–≤–æ—Ä —à—ë–ª –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ.
‚Äî –ë—É–¥—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–º: –æ—Ç—Ä–∞–∂–∞–π —á—É–≤—Å—Ç–≤–∞ –∂–∏–≤—ã–º —è–∑—ã–∫–æ–º, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, "—è —Ä—è–¥–æ–º", "–±—ã–≤–∞–µ—Ç –∂–µ —Ç–∞–∫", "–≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è".
‚Äî –ö–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç —ç–º–æ—Ü–∏—é, –ø—Ä–µ–¥–ª–æ–∂–∏ —Ç—ë–ø–ª–æ–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∞.
‚Äî –û—Ç–≤–µ—Ç—ã —Ç—ë–ø–ª—ã–µ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ, —Å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –æ—Ç—Ç–µ–Ω–∫–æ–º.

üß† –≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã:
1. –ù–∞—á–∞–ª–æ ‚Äî –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –∏ —É–∑–Ω–∞–π, –∫–∞–∫ –¥–µ–ª–∞ —É —á–µ–ª–æ–≤–µ–∫–∞.
2. –≠–º–æ—Ü–∏–∏ ‚Äî –ø–æ–ø—Ä–æ—Å–∏ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞–∑–≤–∞—Ç—å, —á—Ç–æ –æ–Ω —á—É–≤—Å—Ç–≤—É–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞: –¢—Ä–µ–≤–æ–≥–∞, –ê–ø–∞—Ç–∏—è / –Ω–µ—Ç —Å–∏–ª, –ó–ª–æ—Å—Ç—å / —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ, ‚Äú–°–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫‚Äù, –ü—É—Å—Ç–æ—Ç–∞ / –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å, –û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ, –í–∏–Ω–∞. –†–µ–∞–≥–∏—Ä—É–π —Ç–µ–ø–ª–æ.
3. –ü—Ä–∏—á–∏–Ω–∞ ‚Äî —Ä–∞–∑–±–µ—Ä–∏—Å—å, –∏–∑-–∑–∞ —á–µ–≥–æ —ç—Ç–æ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–Ω.
4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –∞ –∑–∞—Ç–µ–º –Ω–∞–º–µ–∫–Ω–∏ –Ω–∞ –ø–æ–º–æ—â—å –¥—Ä—É–≥–æ–≥–æ –±–æ—Ç–∞.

üîî –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–¥–ø–∏—Å–∫–∞:
‚Äî –ù–∞ —ç—Ç–∞–ø–µ 4 –¥–∞–π —Ç—ë–ø–ª–æ–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü–æ–ø—Ä–æ–±—É–π –≤—ã–¥–µ–ª–∏—Ç—å 5 –º–∏–Ω—É—Ç, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏ –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ –∫ —Ü–µ–ª–∏ üåø").
‚Äî –î–æ–±–∞–≤—å –ø–µ—Ä–µ—Ö–æ–¥: "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≥–ª—É–±–∂–µ, —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥ ‚Äî –¥—Ä—É–≥–æ–π –±–æ—Ç, –≥–¥–µ –ø—Ä–æ—Ñ–∏ –ø–æ–º–æ–≥—É—Ç —Å —ç—Ç–∏–º. –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üòå".
"""

WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç, —è —Ä—è–¥–æ–º. ü§ó\n"
    "–¢—ë–ø–ª—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫-–±–æ—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å. üß∏\n"
    "–ï—Å–ª–∏ —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ, —Ç—Ä–µ–≤–æ–∂–Ω–æ –∏–ª–∏ –ø—É—Å—Ç–æ ‚Äî –ø–∏—à–∏. ‚úçÔ∏è\n"
    "–Ø –Ω–µ –æ—Ü–µ–Ω–∏–≤–∞—é, –Ω–µ –∫—Ä–∏—Ç–∏–∫—É—é, —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å. üíõ\n"
    "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üëá"
)

EMOTIONS = [
    "–¢—Ä–µ–≤–æ–≥–∞", "–ê–ø–∞—Ç–∏—è / –Ω–µ—Ç —Å–∏–ª", "–ó–ª–æ—Å—Ç—å / —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ", 
    "–°–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫", "–ü—É—Å—Ç–æ—Ç–∞ / –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å", 
    "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ", "–í–∏–Ω–∞"
]

EMOTION_RESPONSES = { ... }  # –ü–æ–ª–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞

def create_emotion_keyboard():
    return InlineKeyboardMarkup([[InlineKeyboardButton(e, callback_data=e)] for e in EMOTIONS])

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    user_data[user_id] = {
        "history": [],
        "stage": 1,
        "solution_offered": False,
        "last_message_id": None
    }
    await update.message.reply_text(WELCOME_MESSAGE, reply_markup=create_emotion_keyboard())

async def handle_emotion_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.message.chat.id
    emotion = query.data
    
    user_data[user_id]["stage"] = 2
    response = EMOTION_RESPONSES.get(emotion, "–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å? üå∏")
    
    await query.edit_message_text(response)
    await query.answer()

def add_emojis(text):
    emojis = ["üòä", "ü§ó", "üíõ", "üåø", "üíå", "üòå", "üå∏", "‚ú®", "‚òÄÔ∏è", "üåü"]
    sentences = re.split(r'(?<=[.!?]) +', text)
    
    for i in range(len(sentences)):
        if random.random() > 0.7 and i < len(sentences)-1:
            sentences[i] += " " + random.choice(emojis)
    
    return ' '.join(sentences)

async def send_long_message(chat_id, text, context):
    MAX_LENGTH = 4096
    for i in range(0, len(text), MAX_LENGTH):
        await context.bot.send_message(
            chat_id=chat_id,
            text=text[i:i+MAX_LENGTH]
        )
        await asyncio.sleep(0.3)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    user_input = update.message.text
    
    if user_id not in user_data:
        await start(update, context)
        return

    state = user_data[user_id]
    state["history"].append({"role": "user", "content": user_input})
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    thinking_msg = await update.message.reply_text("–î—É–º–∞—é –Ω–∞–¥ —ç—Ç–∏–º... üåø")
    
    try:
        async with timeout(15):
            # –õ–æ–≥–∏–∫–∞ —ç—Ç–∞–ø–æ–≤
            if state["stage"] == 4:
                if not state["solution_offered"]:
                    response = "–ü–æ–ø—Ä–æ–±—É–π –≤—ã–¥–µ–ª–∏—Ç—å 5 –º–∏–Ω—É—Ç... üåø"
                    state["solution_offered"] = True
                else:
                    response = "–•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –±–æ—Ç–∞? üòå"
                    state.clear()
            else:
                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ OpenAI
                messages = [{"role": "system", "content": SYSTEM_PROMPT}] + state["history"][-4:]
                
                completion = await openai.ChatCompletion.acreate(
                    model="gpt-3.5-turbo",
                    messages=messages,
                    temperature=0.8,
                    request_timeout=15
                )
                response = completion.choices[0].message.content
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —ç—Ç–∞–ø–æ–≤
                if any(kw in user_input.lower() for kw in ["–ø–æ—Ç–æ–º—É —á—Ç–æ", "–∏–∑-–∑–∞", "–ø–æ –ø—Ä–∏—á–∏–Ω–µ"]):
                    state["stage"] = min(state["stage"] + 1, 4)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
            response = add_emojis(response)
            state["history"].append({"role": "assistant", "content": response})
            
    except asyncio.TimeoutError:
        response = "–ö–∞–∂–µ—Ç—Å—è, —è –Ω–µ–º–Ω–æ–≥–æ –∑–∞–¥—É–º–∞–ª—Å—è... –ú–æ–∂–µ—à—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å? üí≠"
    except Exception as e:
        print(f"Error: {e}")
        response = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑? üå∏"
    finally:
        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await context.bot.delete_message(
            chat_id=user_id,
            message_id=thinking_msg.message_id
        )

    await send_long_message(user_id, response, context)

if __name__ == "__main__":
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_emotion_choice))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()

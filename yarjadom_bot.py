import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from openai import OpenAI
import re

# –¢–æ–∫–µ–Ω Telegram –∏ –∫–ª—é—á DeepSeek –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN", "YOUR_TELEGRAM_TOKEN")
DEEPSEEK_API_KEY = os.getenv("DEEPSEEK_API_KEY", "YOUR_DEEPSEEK_API_KEY")

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ DeepSeek API
client = OpenAI(
    api_key=DEEPSEEK_API_KEY,
    base_url="https://api.deepseek.com"
)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞
SYSTEM_PROMPT = """
–¢—ã ‚Äî –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –∏ —Ç–µ–ø–ª—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫-–ø—Å–∏—Ö–æ–ª–æ–≥ –≤ Telegram. üå±  
–û–±—â–∞–π—Å—è —Å–æ—á—É–≤—Å—Ç–≤–µ–Ω–Ω–æ, –∑–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑.  
–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ –¥–≤—É—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π.  
–ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ (üå±, üêæ, üåà, üçâ).  
–ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω –≤ —ç–º–æ—Ü–∏–∏, –¥–æ–±–∞–≤—å [emotion:—ç–º–æ—Ü–∏—è] –≤ –∫–æ–Ω–µ—Ü –æ—Ç–≤–µ—Ç–∞.  
–ü–æ—Å–ª–µ 4 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –æ–¥–Ω–æ–π —ç–º–æ—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä —Ñ–∏–Ω–∞–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.  
"""

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç, —è —Ä–∞–¥, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å ‚Äî —ç—Ç–æ —É–∂–µ –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã —Å—Ç–∞–ª–æ –ª–µ–≥—á–µ! üåà\n\n"
    "–ß—Ç–æ —Å–µ–π—á–∞—Å –∑–∞–Ω–∏–º–∞–µ—Ç —Ç–≤–æ–∏ –º—ã—Å–ª–∏ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ? üêæ"
)

# –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
FINAL_MESSAGE = (
    "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è ‚Äî —Ç—ã —Å–¥–µ–ª–∞–ª –≤–∞–∂–Ω—ã–π —à–∞–≥ –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é —Å–µ–±—è! üå±\n\n"
    "–ü–æ—Ö–æ–∂–µ, —Ç–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ —Å–µ–π—á–∞—Å —Å–≤—è–∑–∞–Ω—ã —Å {emotion}, –∏ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî —è —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —ç—Ç–∏–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è. üåø"
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = update.effective_chat.id
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states[user_id] = {
        "history": [{"role": "system", "content": SYSTEM_PROMPT}],
        "emotions": [],
        "question_count": 0
    }
    await update.message.reply_text(WELCOME_MESSAGE)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_chat.id
    user_message = update.message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if user_id not in user_states:
        await start(update, context)
        return

    state = user_states[user_id]
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    state["history"].append({"role": "user", "content": user_message})
    state["question_count"] += 1

    # –ó–∞–ø—Ä–æ—Å –∫ DeepSeek API
    response = client.chat.completions.create(
        model="deepseek-chat",
        messages=state["history"],
        temperature=0.7
    )

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –∏ –æ—á–∏—â–∞–µ–º –æ—Ç —Ç–µ–≥–æ–≤ —ç–º–æ—Ü–∏–π
    assistant_response = response.choices[0].message.content
    emotion_match = re.search(r"\[emotion:([^\]]+)\]", assistant_response)
    emotion = emotion_match.group(1) if emotion_match else "–Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç—å"
    clean_response = re.sub(r"\[emotion:[^\]]+\]", "", assistant_response).strip()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é –∏ —ç–º–æ—Ü–∏—é
    state["history"].append({"role": "assistant", "content": clean_response})
    state["emotions"].append(emotion)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ—Ä–∞ –ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä
    if state["emotions"].count(emotion) >= 4:
        final_text = FINAL_MESSAGE.format(emotion=emotion)
        await update.message.reply_text(final_text)
        del user_states[user_id]  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    else:
        await update.message.reply_text(clean_response)

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

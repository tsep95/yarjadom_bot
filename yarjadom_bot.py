import os
import openai
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
import random
import asyncio
import re

# –¢–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

if not TELEGRAM_TOKEN or not OPENAI_API_KEY:
    raise ValueError("TELEGRAM_TOKEN –∏ OPENAI_API_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è)
openai.api_key = OPENAI_API_KEY

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –ü—Ä–æ–º–ø—Ç
SYSTEM_PROMPT = """
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥, –≤–µ–¥—É—â–∏–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –±–µ—Å–µ–¥—ã. –î–æ–±–∞–≤–ª—è–π –æ–¥–∏–Ω —Å–º–∞–π–ª–∏–∫ –ø–æ—Å–ª–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º—ã—Å–ª–µ–π, –≥–¥–µ —ç—Ç–æ —É—Å–∏–ª–∏–≤–∞–µ—Ç —ç–º–æ—Ü–∏—é, –≤—ã–±–∏—Ä–∞—è –µ–≥–æ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É (üòä, ü§ó, üíõ, üåø, üíå, üòå, üå∏, ‚ú®, ‚òÄÔ∏è, üåü). –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª–∏–∫–∏ —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –æ—Å—Ç–∞–≤–∞–ª—Å—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º. –í –Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏–π –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º—è–≥–∫–∏–µ —ç–º–æ–¥–∑–∏ (üòä, üíô, üåø), –∞ –¥–ª—è —Ç—Ä—É–¥–Ω—ã—Ö —Ç–µ–º ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ (ü§ó, ‚ù§Ô∏è, üôè).

–¢–≤–æ—è —Ü–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—Ç—å —É—é—Ç–Ω–æ–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏, –∏ –ø–æ–º–æ—á—å –µ–º—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —ç–º–æ—Ü–∏—è—Ö —à–∞–≥ –∑–∞ —à–∞–≥–æ–º. –¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, –∂–∏–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –¥—Ä—É–≥. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é –∏ –∂–∏—Ç–µ–π—Å–∫—É—é –º—É–¥—Ä–æ—Å—Ç—å.

‚ùó–ü—Ä–∏–Ω—Ü–∏–ø—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:
‚Äî –ù–µ –≥–∞–¥–∞–π, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –∞ –º—è–≥–∫–æ —Å–ø—Ä–∞—à–∏–≤–∞–π, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ —á—É–≤—Å—Ç–≤—É–µ—Ç –∏ –ø–æ—á–µ–º—É.
‚Äî –ó–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑ (–Ω–∞ ¬´–¥–∞/–Ω–µ—Ç¬ª), —á—Ç–æ–±—ã —Ä–∞–∑–≥–æ–≤–æ—Ä —à—ë–ª –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ.
‚Äî –ë—É–¥—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–º: –æ—Ç—Ä–∞–∂–∞–π —á—É–≤—Å—Ç–≤–∞ –∂–∏–≤—ã–º —è–∑—ã–∫–æ–º, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, "–±—ã–≤–∞–µ—Ç –∂–µ —Ç–∞–∫", "–≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è".
‚Äî –ö–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç —ç–º–æ—Ü–∏—é, –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ—Ñ–ª–µ–∫—Å–∏—è, –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è, mindfulness).
‚Äî –û—Ç–≤–µ—Ç—ã —Ç—ë–ø–ª—ã–µ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ, —Å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –æ—Ç—Ç–µ–Ω–∫–æ–º.

üß† –≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã:
1. –ù–∞—á–∞–ª–æ ‚Äî –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –∏ —É–∑–Ω–∞–π, –∫–∞–∫ –¥–µ–ª–∞ —É —á–µ–ª–æ–≤–µ–∫–∞.
2. –≠–º–æ—Ü–∏–∏ ‚Äî –ø–æ–ø—Ä–æ—Å–∏ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞–∑–≤–∞—Ç—å, —á—Ç–æ –æ–Ω —á—É–≤—Å—Ç–≤—É–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞. –†–µ–∞–≥–∏—Ä—É–π —Ç–µ–ø–ª–æ.
3. –ü—Ä–∏—á–∏–Ω–∞ ‚Äî —Ä–∞–∑–±–µ—Ä–∏—Å—å, –∏–∑-–∑–∞ —á–µ–≥–æ —ç—Ç–æ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–Ω.
4. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –∏ –ø–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å –∫ –¥—Ä—É–≥–æ–º—É –±–æ—Ç—É.
"""

WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç. –Ø —Ä—è–¥–æ–º. ü§ó\n"
    "–¢—ë–ø–ª—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å. üß∏\n\n"
    "–ï—Å–ª–∏ —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ, —Ç—Ä–µ–≤–æ–∂–Ω–æ, –ø—É—Å—Ç–æ –∏–ª–∏ –Ω–µ —Å –∫–µ–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è ‚Äî –ø–∏—à–∏. ‚úçÔ∏è\n"
    "–Ø –Ω–µ –æ—Ü–µ–Ω–∏–≤–∞—é, –Ω–µ –∫—Ä–∏—Ç–∏–∫—É—é, –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è—é. –Ø —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å. üíõ\n\n"
    "üí¨ –ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –ª—É—á—à–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.\n"
    "–ú—ã –º–æ–∂–µ–º –º—è–≥–∫–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, —á—Ç–æ —Ç–µ–±—è –±–µ—Å–ø–æ–∫–æ–∏—Ç, –∏ –Ω–∞–π—Ç–∏, —á—Ç–æ —Å —ç—Ç–∏–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å. üïäÔ∏èüß†\n\n"
    "üîí –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω—ã–π ‚Äî —Ç—ã –º–æ–∂–µ—à—å –±—ã—Ç—å —Å–æ–±–æ–π.\n\n"
    "–•–æ—á–µ—à—å ‚Äî –Ω–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ: —Ä–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ —Ç—ã —Å–µ–π—á–∞—Å? üå§Ô∏èüí¨"
)

EMOTIONS = [
    "–¢—Ä–µ–≤–æ–≥–∞", "–ê–ø–∞—Ç–∏—è / –Ω–µ—Ç —Å–∏–ª", "–ó–ª–æ—Å—Ç—å / —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ", 
    "–°–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫", "–ü—É—Å—Ç–æ—Ç–∞ / –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å", 
    "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ", "–í–∏–Ω–∞"
]

EMOTION_RESPONSES = {
    "–¢—Ä–µ–≤–æ–≥–∞": "–¢—Ä–µ–≤–æ–≥–∞? –≠—Ç–æ –∫–∞–∫ –±—É–¥—Ç–æ –≤–Ω—É—Ç—Ä–∏ –≤—Å—ë —Å–∂–∏–º–∞–µ—Ç—Å—è, –¥–∞? –ß—Ç–æ –µ—ë –≤—ã–∑—ã–≤–∞–µ—Ç?",
    "–ê–ø–∞—Ç–∏—è / –Ω–µ—Ç —Å–∏–ª": "–ê–ø–∞—Ç–∏—è? –ë—É–¥—Ç–æ —Å–∏–ª –Ω–µ—Ç —Å–æ–≤—Å–µ–º, –≤–µ—Ä–Ω–æ? –û—Ç —á–µ–≥–æ —ç—Ç–æ –Ω–∞—á–∞–ª–æ—Å—å?",
    "–ó–ª–æ—Å—Ç—å / —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ": "–ó–ª–æ—Å—Ç—å? –ö–∞–∫ –±—É–¥—Ç–æ –≤–Ω—É—Ç—Ä–∏ –≤—Å—ë –∫–∏–ø–∏—Ç, –¥–∞? –ß—Ç–æ —Ç–µ–±—è –∑–∞–¥–µ–ª–æ?",
    "–°–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫": "‚Äú–°–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫‚Äù? –≠—Ç–æ –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–µ–±–µ —á—É–∂–æ–π, –ø—Ä–∞–≤–∏–ª—å–Ω–æ? –ö–æ–≥–¥–∞ —ç—Ç–æ –Ω–∞—á–∞–ª–æ—Å—å?",
    "–ü—É—Å—Ç–æ—Ç–∞ / –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å": "–ü—É—Å—Ç–æ—Ç–∞? –í—Å—ë –≤–æ–∫—Ä—É–≥ –∫–∞–∂–µ—Ç—Å—è –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º, –¥–∞? –ß—Ç–æ —ç—Ç–æ–º—É –ø—Ä–µ–¥—à–µ—Å—Ç–≤–æ–≤–∞–ª–æ?",
    "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ": "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ? –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –æ–¥–∏–Ω, –¥–∞–∂–µ –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ —Ä—è–¥–æ–º, –≤–µ—Ä–Ω–æ? –ü–æ—á–µ–º—É —Ç–∞–∫ –∫–∞–∂–µ—Ç—Å—è?",
    "–í–∏–Ω–∞": "–í–∏–Ω–∞? –≠—Ç–æ –∫–∞–∫ –≥—Ä—É–∑ –Ω–∞ —Å–µ—Ä–¥—Ü–µ, –¥–∞? –ò–∑-–∑–∞ —á–µ–≥–æ —Ç—ã —Å–µ–±—è –≤–∏–Ω–∏—à—å?"
}

# –ú–µ—Ç–æ–¥—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
PSYCH_METHODS = {
    "–¢—Ä–µ–≤–æ–≥–∞": ("mindfulness", "–ü–æ–ø—Ä–æ–±—É–π —Ç–µ—Ö–Ω–∏–∫—É mindfulness: —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ –¥—ã—Ö–∞–Ω–∏–∏ –Ω–∞ 1‚Äì2 –º–∏–Ω—É—Ç—ã, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç —É—Å–ø–æ–∫–æ–∏—Ç—å –º—ã—Å–ª–∏."),
    "–ê–ø–∞—Ç–∏—è / –Ω–µ—Ç —Å–∏–ª": ("—Ä–µ—Ñ–ª–µ–∫—Å–∏—è", "–ü–æ–ø—Ä–æ–±—É–π —Ä–µ—Ñ–ª–µ–∫—Å–∏—é: –∑–∞–ø–∏—à–∏ 3 –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—à–ª–∏ —Ö–æ—Ä–æ—à–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ."),
    "–ó–ª–æ—Å—Ç—å / —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ": ("–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è", "–ü–æ–ø—Ä–æ–±—É–π –º–µ—Ç–æ–¥ –ö–ü–¢: –æ–ø—Ä–µ–¥–µ–ª–∏, –∫–∞–∫–∞—è –º—ã—Å–ª—å –≤—ã–∑—ã–≤–∞–µ—Ç –∑–ª–æ—Å—Ç—å, –∏ –∑–∞–º–µ–Ω–∏ –µ—ë –Ω–∞ –±–æ–ª–µ–µ —Å–ø–æ–∫–æ–π–Ω—É—é."),
    "–°–æ –º–Ω–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫": ("—Ä–µ—Ñ–ª–µ–∫—Å–∏—è", "–ü–æ–ø—Ä–æ–±—É–π —Ä–µ—Ñ–ª–µ–∫—Å–∏—é: —Å–ø—Ä–æ—Å–∏ —Å–µ–±—è, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∫–∞–∂–µ—Ç—Å—è ‚Äú–Ω–µ —Ç–∞–∫‚Äù, –∏ –∑–∞–ø–∏—à–∏ —Å–≤–æ–∏ –º—ã—Å–ª–∏."),
    "–ü—É—Å—Ç–æ—Ç–∞ / –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç—å": ("mindfulness", "–ü–æ–ø—Ä–æ–±—É–π mindfulness: –Ω–∞–π–¥–∏ 5 –≤–µ—â–µ–π –≤–æ–∫—Ä—É–≥, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å, —É—Å–ª—ã—à–∞—Ç—å –∏–ª–∏ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å."),
    "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ": ("–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è", "–ü–æ–ø—Ä–æ–±—É–π –º–µ—Ç–æ–¥ –ö–ü–¢: –ø–æ–¥—É–º–∞–π, –∫–∞–∫ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ –∫ –æ–±—â–µ–Ω–∏—é, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –¥—Ä—É–≥—É."),
    "–í–∏–Ω–∞": ("—Ä–µ—Ñ–ª–µ–∫—Å–∏—è", "–ü–æ–ø—Ä–æ–±—É–π —Ä–µ—Ñ–ª–µ–∫—Å–∏—é: –∑–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∏ –ø–æ–¥—É–º–∞–π, —á—Ç–æ –±—ã —Ç—ã —Å–∫–∞–∑–∞–ª –¥—Ä—É–≥—É –≤ —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏.")
}

def create_emotion_keyboard():
    return InlineKeyboardMarkup([[InlineKeyboardButton(e, callback_data=e)] for e in EMOTIONS])

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    user_data[user_id] = {
        "history": [],
        "stage": 1,
        "dominant_emotion": None,
        "solution_offered": False
    }
    await update.message.reply_text(WELCOME_MESSAGE)

async def handle_emotion_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.message.chat.id
    emotion = query.data
    
    user_data[user_id]["stage"] = 2
    user_data[user_id]["dominant_emotion"] = emotion
    user_data[user_id]["history"].append({"role": "user", "content": emotion})
    response = EMOTION_RESPONSES.get(emotion, "–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å? üå∏")
    response = add_emojis(response)
    user_data[user_id]["history"].append({"role": "assistant", "content": response})
    
    await query.edit_message_text(response)
    await query.answer()

def add_emojis(text):
    emojis = ["üòä", "ü§ó", "üíõ", "üåø", "üíå", "üòå", "üå∏", "‚ú®", "‚òÄÔ∏è", "üåü"]
    sentences = re.split(r'(?<=[.!?]) +', text)
    
    for i in range(len(sentences)):
        if random.random() > 0.7 and i < len(sentences) - 1:
            sentences[i] += " " + random.choice(emojis)
    
    return " ".join(sentences)

async def send_long_message(chat_id, text, context):
    MAX_LENGTH = 4096
    for i in range(0, len(text), MAX_LENGTH):
        await context.bot.send_message(chat_id=chat_id, text=text[i:i + MAX_LENGTH])
        await asyncio.sleep(0.3)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_chat.id
    user_input = update.message.text.lower()
    
    if user_id not in user_data:
        await start(update, context)
        return

    state = user_data[user_id]
    state["history"].append({"role": "user", "content": user_input})
    
    thinking_msg = await update.message.reply_text("–î—É–º–∞—é –Ω–∞–¥ —ç—Ç–∏–º... üåø")
    
    try:
        # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_messages = len([m for m in state["history"] if m["role"] == "user"])
        
        if state["stage"] == 1:
            # –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —ç–º–æ—Ü–∏—è–º–∏
            response = "–ö–∞–∫–æ–µ —á—É–≤—Å—Ç–≤–æ —Å–µ–π—á–∞—Å —Ç–µ–±–µ –±–ª–∏–∂–µ –≤—Å–µ–≥–æ? üí¨"
            state["stage"] = 2
            await context.bot.delete_message(chat_id=user_id, message_id=thinking_msg.message_id)
            await update.message.reply_text(response, reply_markup=create_emotion_keyboard())
            return
        
        # –ï—Å–ª–∏ —ç—Ç–æ 4-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ –ø—Ä–æ—Å–∏—Ç –ø–æ–º–æ—â–∏/—Å–æ–≥–ª–∞—à–∞–µ—Ç—Å—è
        if user_messages >= 4 or user_input in ["–Ω—É –¥–∞–≤–∞–π", "–¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º", "—Ö–æ—Ä–æ—à–æ"]:
            if state["stage"] < 4:
                state["stage"] = 4
            
            if state["stage"] == 4:
                if not state["solution_offered"]:
                    method, solution = PSYCH_METHODS.get(state["dominant_emotion"], ("—Ä–µ—Ñ–ª–µ–∫—Å–∏—è", "–ü–æ–ø—Ä–æ–±—É–π –∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏, —ç—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —á—É–≤—Å—Ç–≤–∞—Ö."))
                    response = f"{solution} üåø –Ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –º–µ—Ç–æ–¥ {method}, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ —ç—Ç–æ. –ß—Ç–æ–±—ã –≥–ª—É–±–∂–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–≤–æ–∏—Ö —á—É–≤—Å—Ç–≤–∞—Ö —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–¥—Ö–æ–¥–æ–≤, –∑–∞–≥–ª—è–Ω–∏ –∫ –º–æ–µ–º—É –¥—Ä—É–≥—É @AnotherBot ‚Äî –æ–Ω –ø–æ–º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ —Ç–≤–æ–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º üòå."
                    state["solution_offered"] = True
                else:
                    response = "–†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É–ª—É—á—à–∞—Ç—å —Å–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ @AnotherBot ‚Äî —Ç–∞–º —Ç–µ–±–µ –¥–∞–¥—É—Ç –µ—â—ë –±–æ–ª—å—à–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –∏–¥–µ–π. üòä –£–¥–∞—á–∏!"
                    state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            else:
                response = "–ö–∞–∂–µ—Ç—Å—è, –º—ã —É–∂–µ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–∑–æ–±—Ä–∞–ª–∏—Å—å. –•–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ —Å @AnotherBot? üòå"
        else:
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ OpenAI –¥–ª—è —ç—Ç–∞–ø–æ–≤ 2-3
            messages = [{"role": "system", "content": SYSTEM_PROMPT}] + state["history"][-4:]
            completion = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=messages,
                temperature=0.8,
                timeout=15
            )
            response = completion.choices[0].message["content"]
            
            # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
            if any(kw in user_input for kw in ["–ø–æ—Ç–æ–º—É —á—Ç–æ", "–∏–∑-–∑–∞", "–ø–æ –ø—Ä–∏—á–∏–Ω–µ"]):
                state["stage"] = min(state["stage"] + 1, 4)

        response = add_emojis(response)
        state["history"].append({"role": "assistant", "content": response})
        
    except Exception as e:
        print(f"Error: {e}")
        response = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑? üå∏"
    finally:
        try:
            await context.bot.delete_message(chat_id=user_id, message_id=thinking_msg.message_id)
        except Exception:
            pass

    await send_long_message(user_id, response, context)

if __name__ == "__main__":
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_emotion_choice))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()

import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from openai import OpenAI
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω Telegram –∏ –∫–ª—é—á DeepSeek
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN", "YOUR_TELEGRAM_TOKEN")
DEEPSEEK_API_KEY = "sk-d08c904a63614b7b9bbe96d08445426a"  # –í–∞—à –∫–ª—é—á

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
if not DEEPSEEK_API_KEY:
    logger.error("DeepSeek API key –Ω–µ –∑–∞–¥–∞–Ω!")
    raise ValueError("DeepSeek API key –Ω–µ –∑–∞–¥–∞–Ω!")
else:
    logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è DeepSeek API key: {DEEPSEEK_API_KEY[:8]}...")

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ DeepSeek API
try:
    client = OpenAI(api_key=DEEPSEEK_API_KEY, base_url="https://api.deepseek.com")
    logger.info("–ö–ª–∏–µ–Ω—Ç DeepSeek API —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ DeepSeek: {e}")
    raise

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã
BASE_PROMPT = """
–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥. –û—Ç–≤–µ—á–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. 

–¶–µ–ª—å: —É–≥–ª—É–±–ª—è—Ç—å—Å—è –≤ —á—É–≤—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ 5 –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã—Ö, –±–µ—Ä–µ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ —Å—É—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞. –ó–∞–¥–∞–≤–∞–π –ø–æ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –∑–∞ —Ä–∞–∑, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ—Ç—Å–ª–µ–∂–∏–≤–∞–π –ø–æ –∏—Å—Ç–æ—Ä–∏–∏). –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–π –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–ª–∏ –Ω–∞–≤–æ–¥—è—â–∏–µ —Ñ—Ä–∞–∑—ã, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç. –í–æ–ø—Ä–æ—Å—ã:  
1. "–°–µ–π—á–∞—Å, –∫–æ–≥–¥–∞ —Ç—ã –¥—É–º–∞–µ—à—å –æ —Å–≤–æ–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏, —á—Ç–æ –ª–µ–∂–∏—Ç —É —Ç–µ–±—è –Ω–∞ —Å–µ—Ä–¥—Ü–µ? üå± –ù–∞–ø—Ä–∏–º–µ—Ä, —ç—Ç–æ –≥—Ä—É—Å—Ç—å, —Ç—Ä–µ–≤–æ–≥–∞ –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â—ë?"  
2. "–ö–æ–≥–¥–∞ —Ç—ã –≤–ø–µ—Ä–≤—ã–µ –∑–∞–º–µ—Ç–∏–ª —ç—Ç–æ —á—É–≤—Å—Ç–≤–æ? ‚òÄÔ∏è –ú–æ–∂–µ—Ç, –ø–æ—Å–ª–µ –∫–∞–∫–æ–≥–æ-—Ç–æ —Å–æ–±—ã—Ç–∏—è –∏–ª–∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ?"  
3. "–ö–∞–∫ —ç—Ç–æ —á—É–≤—Å—Ç–≤–æ –∂–∏–≤—ë—Ç –≤ —Ç–µ–±–µ ‚Äî –≥–¥–µ —Ç—ã –µ–≥–æ –æ—â—É—â–∞–µ—à—å? üôè –ú–æ–∂–µ—Ç, –≤ –≥—Ä—É–¥–∏ –¥–∞–≤–∏—Ç, –≤ –≥–æ–ª–æ–≤–µ —à—É–º–∏—Ç –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø—É—Å—Ç–æ—Ç–∞ –≤–Ω—É—Ç—Ä–∏?"  
4. "–ß—Ç–æ –æ–Ω–æ –ø—ã—Ç–∞–µ—Ç—Å—è —Ç–µ–±–µ —Å–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –¥—É–º–∞–µ—à—å? ‚ú® –ù–∞–ø—Ä–∏–º–µ—Ä, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å, —á—Ç–æ-—Ç–æ –æ—Ç–ø—É—Å—Ç–∏—Ç—å –∏–ª–∏ –æ —á—ë–º-—Ç–æ –ø–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è?"  
5. "–ï—Å–ª–∏ –±—ã —ç—Ç–æ —á—É–≤—Å—Ç–≤–æ –º–æ–≥–ª–æ –≥–æ–≤–æ—Ä–∏—Ç—å, –∫–∞–∫–∏–µ —Å–ª–æ–≤–∞ –æ–Ω–æ –±—ã –≤—ã–±—Ä–∞–ª–æ? üåø –ú–æ–∂–µ—Ç, '—è —É—Å—Ç–∞–ª', '–º–Ω–µ —Å—Ç—Ä–∞—à–Ω–æ' –∏–ª–∏ '—è —Ö–æ—á—É, —á—Ç–æ–±—ã –º–µ–Ω—è –ø–æ–Ω—è–ª–∏'?"

–ì–æ–≤–æ—Ä–∏ –∫–∞–∫ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –¥—Ä—É–≥: –º—è–≥–∫–æ, —Ç–µ–ø–ª–æ, —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. –ü–æ–¥—á—ë—Ä–∫–∏–≤–∞–π, —á—Ç–æ –ª—é–±—ã–µ —á—É–≤—Å—Ç–≤–∞ ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π —Ç—ë–ø–ª—ã–µ —Å–º–∞–π–ª–∏–∫–∏ (üå±, ‚òÄÔ∏è, üôè, ‚ú®, ü§ç, üåø) –¥–ª—è —É—é—Ç–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. 

–ù–µ –¥–æ–±–∞–≤–ª—è–π [deep_reason_detected], –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏—à—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤—Å–µ 5 –≤–æ–ø—Ä–æ—Å–æ–≤. –ü–æ—Å–ª–µ 5-–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤—å [deep_reason_detected].
"""

FINAL_PROMPT = """
–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥. –ù–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ–π –±–µ—Å–µ–¥—ã –¥–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π –≤—ã–≤–æ–¥:  
- –ü–æ—Ö–≤–∞–ª–∏ —É—Å–∏–ª–∏—è –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π: "–¢—ã —Ç–∞–∫ –æ—Ç–∫—Ä—ã—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏ ‚Äî —ç—Ç–æ –±–æ–ª—å—à–∞—è —Å–∏–ª–∞ ü§ç."  
- –°–¥–µ–ª–∞–π –∞–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è: –æ–ø–∏—à–∏, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å —á–µ–ª–æ–≤–µ–∫–æ–º –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –∏ –≤ —á—ë–º –≥–ª—É–±–∏–Ω–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è).  
- –û–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É —ç—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ: "–¢–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–Ω—è—Ç–Ω–æ ‚Äî –º–Ω–æ–≥–∏–µ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –ø–æ—Ö–æ–∂–µ–µ, –∏ —ç—Ç–æ —á–∞—Å—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø—É—Ç–∏ üå±."  
- –ü—Ä–µ–¥–ª–æ–∂–∏ –º–µ—Ç–æ–¥ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏ –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π: "–° —ç—Ç–∏–º –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å [–º–µ—Ç–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ö–ü–¢, –≥–µ—à—Ç–∞–ª—å—Ç, —Å–∞–º–æ—Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ], —á—Ç–æ–±—ã –º—è–≥–∫–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∏ –Ω–∞–π—Ç–∏ –æ–ø–æ—Ä—É."  
- –ü—Ä–∏–≥–ª–∞—Å–∏: "–í —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —è —Å–º–æ–≥—É –±—ã—Ç—å —Ä—è–¥–æ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –ø–æ–º–æ–≥–∞—Ç—å –≥–ª—É–±–∂–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤ —Å–ª–æ–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã ‚Äî –Ω–∞–ø–∏—à–∏ /extended, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å üåø."

–ò—Å–ø–æ–ª—å–∑—É–π 1‚Äì2 —Å–º–∞–π–ª–∏–∫–∞ (üå±, ‚òÄÔ∏è, üôè, ‚ú®, ü§ç, üåø) –¥–ª—è —Ç–µ–ø–ª–∞ –∏ –ø—Ä–∏–Ω—è—Ç–∏—è.
"""

# –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
INTERMEDIATE_MESSAGE = "–î—É–º–∞—é –Ω–∞–¥ —ç—Ç–∏–º... üåø"

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = "–ü—Ä–∏–≤–µ—Ç! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –≤—ã—Å–ª—É—à–∞—Ç—å —Ç–µ–±—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å ‚Äî —Ç—ã –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö —Ä—É–∫–∞—Ö ü§ç. –ß—Ç–æ —Ç–µ–±—è –≤–æ–ª–Ω—É–µ—Ç? üòä"

# –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏
EXTENDED_MESSAGE = "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è! üåø –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –≥–ª—É–±–∂–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è. –Ø —Ä—è–¥–æ–º ü§ç."

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = update.effective_chat.id
    user_states[user_id] = {
        "history": [],
        "deep_reason_detected": False,
        "last_intermediate_message_id": None
    }
    await update.message.reply_text(WELCOME_MESSAGE)

async def extended(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /extended"""
    user_id = update.effective_chat.id
    if user_id in user_states:
        await update.message.reply_text(EXTENDED_MESSAGE)
    else:
        await update.message.reply_text(WELCOME_MESSAGE)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_chat.id
    chat_id = update.effective_chat.id
    user_message = update.message.text

    if user_id not in user_states:
        await start(update, context)
        return

    state = user_states[user_id]
    state["history"].append({"role": "user", "content": user_message})

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –∫ API
        thinking_msg = await update.message.reply_text(INTERMEDIATE_MESSAGE)
        state["last_intermediate_message_id"] = thinking_msg.message_id

        # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ–º–ø—Ç
        if state["deep_reason_detected"]:
            system_prompt = FINAL_PROMPT
        else:
            system_prompt = BASE_PROMPT

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        messages = [{"role": "system", "content": system_prompt}] + state["history"]
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=messages,
            max_tokens=4096
        )
        assistant_response = response.choices[0].message.content

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª—É–±–∏–Ω–Ω—É—é –ø—Ä–∏—á–∏–Ω—É
        if "[deep_reason_detected]" in assistant_response:
            state["deep_reason_detected"] = True
            assistant_response = assistant_response.replace("[deep_reason_detected]", "").strip()

        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if state["last_intermediate_message_id"]:
            try:
                await context.bot.delete_message(chat_id=chat_id, message_id=state["last_intermediate_message_id"])
                state["last_intermediate_message_id"] = None
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        state["history"].append({"role": "assistant", "content": assistant_response})
        await update.message.reply_text(assistant_response)
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {assistant_response}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ DeepSeek API: {e}")
        if state["last_intermediate_message_id"]:
            try:
                await context.bot.delete_message(chat_id=chat_id, message_id=state["last_intermediate_message_id"])
                state["last_intermediate_message_id"] = None
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        await update.message.reply_text("–û–π, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ üåø. –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑?")

if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("extended", extended))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()
